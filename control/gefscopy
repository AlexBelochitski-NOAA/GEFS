#!/bin/ksh
#
# create control and parm directories for a copy of the local gefs system
#
# if this is already a linked clone, create copies of the linked directories
#
echo `date` $0 $* begin
#
# set up the directories
#

nldir=`pwd`
nlbdir=`basename $nldir`
nlddir=`dirname $nldir`
nldbdir=`basename $nlddir`
nldddir=`dirname $nlddir`
nlddbdir=`basename $nldddir`
nlddddir=`dirname $nldddir`
nldddbdir=`basename $nlddddir`
nldddddir=`dirname $nlddddir`
nlddddbdir=`basename $nldddddir`
nlddddddir=`dirname $nldddddir`
echo nldir=$nldir
echo nlbdir=$nlbdir
echo nlddir=$nlddir
echo nldbdir=$nldbdir
echo nldddir=$nldddir
echo nlddbdir=$nlddbdir
echo nlddddir=$nlddddir
echo nldddbdir=$nldddbdir
echo nldddddir=$nldddddir
echo nlddddbdir=$nlddddbdir
echo nlddddddir=$nlddddddir

controldir=control
envdir=nwdev
basedirstring=s
echo controldir=$controldir
echo envdir=$envdir
echo basedirstring=$basedirstring

success=no

if [[ $nlbdir = $controldir ]] && \
   [[ $nldbdir = $envdir ]] && \
   [[ $nldddbdir = $basedirstring ]] ; then
   expidsource=$nlddbdir
   useridsource=$nlddddbdir
   echo expidsource=$expidsource
   echo useridsource=$useridsource
   if [[ $# == 1 ]]; then
     expiddest=$1
     useriddest=$LOGNAME
     echo expiddest=$expiddest
     echo useriddest=$useriddest
     basesource=$nlddir
     echo basesource=$basesource
     basedest=$nlddddddir/$useriddest/$basedirstring/$expiddest/$envdir
     echo basedest=$basedest
     if [[ -d $basedest ]]; then
       echo basedest=$basedest ALREADY EXISTS
       echo the existing directory will not be overwritten
     elif [[ -a $basedest ]]; then
       echo basedest=$basedest ALREADY EXISTS as a file
       echo the existing file will not be overwritten
     else
       echo basedest=$basedest does not exist yet
       mkdir -p $basedest
       rc=$?
       if (( rc == 0 )); then
	 if [[ -d $basedest ]]; then
	   cd $basesource
	   rc=$?
	   if (( rc == 0 )); then
	     success=yes
	     for dir in *
	     do
	       if [[ -d $dir ]]; then
		 cp -pr $dir $basedest/$dir
		 rc=$?
		 if (( rc == 0 )); then
		   echo $basedest/$dir successfully copied
		 else
		   echo cp -pr $dir $basedest/$dir FAILED rc=$rc
		   success=no
		 fi
	       elif [[ -f $dir ]]; then
		 file=$dir
		 cp -p $file $basedest/$file
		 rc=$?
		 if (( rc == 0 )); then
		   echo $basedest/$file successfully copied
		 else
		   echo cp -p $file $basedest/$file FAILED rc=$rc
		   success=no
		 fi
	       else
		 echo dir=$dir DOES NOT EXIST AS A DIRECTORY OR FILE IN $basesource
		 success=no
	       fi
	     done
	   else
	     echo
	     echo cd $basesource FAILED rc=$?
	   fi
	 else
	   echo
	   echo basedest=$basedest DOES NOT EXIST AS A DIRECTORY
	 fi
       else
	 echo
	 echo mkdir -p $basedest FAILED rc=$rc
       fi
     fi
   else
     echo
     echo one argument is required instead of $*
   fi
else
  echo
  echo nldir=$nldir IS NOT a GEFS control subdirectory
fi

echo success=$success

if [[ $success != yes ]]; then
  echo
  echo one argument reequired: expid
  echo expid must be 4 characters long and will be created in a directory
  echo analogous to the location of the parent of the current working directory
  echo
  echo the current working directory should be control submdirectory of either
  echo 1:  a GEFS directory tree
  echo 2:  a clone of a GEFS directory tree as created by this script
  echo
  echo the current working directory may belong to another user
  echo the user of the script must have permission to run the script and copy the directories
  echo the destination location must belong the the user of the script
  echo
fi

echo `date` $0 $* end
