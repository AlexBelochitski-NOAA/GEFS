#!/bin/ksh
#
# echo get nwges files from production or from another experiment
#
echo `date` $0 $* begin
goodargs=no
if (( $# > 0 )); then
  yyyymmddhh=$1
  if (( yyyymmddhh < 1901010100 )) || (( yyyymmddhh > 2999123118 )); then
    echo yyyymmddhh=$yyyymmddhh IS OUT OF RANGE
  else
    expin=prod
    if (( $# > 1 )); then
      expin=$2
    fi

    envir=$(basename $(dirname $(pwd) ) | cut -c3-)
    echo envir=$envir

    expid=$(basename $(dirname $(dirname $(pwd) ) ) )
    id=`echo $expid|cut -c3-4`
    echo expid=$expid
    echo id=$id

    . setbase

    case $expin in
      (prod) dirgi=/nwges/prod ;;
      (para) dirgi=/nwges/para ;;
      (test) dirgi=/nwges/test ;;
      (*)    dirgi=$baseoutput/nwges/dev ;;
    esac
    if [[ -d $dirgi ]]; then
      yyyymmdd=`echo $yyyymmddhh|cut -c1-8`
      cyc=`echo $yyyymmddhh|cut -c9-10`
      case $cyc in
	(00) goodargs=yes ;;
	(06) goodargs=yes ;;
	(12) goodargs=yes ;;
	(18) goodargs=yes ;;
	(*) echo INVALID CYCLE=$cyc
      esac
      cycle=t${cyc}z
      echo yyyymmdd=$yyyymmdd cyc=$cyc cycle=$cycle
      if [[ $goodargs = yes ]]; then
	dirgesi=$dirgi/gefs.$yyyymmdd
	echo dirgesi=$dirgesi
	if [[ -d $dirgesi ]]; then
	  dirgeso=$baseoutput/nwges/dev/gefs.$yyyymmdd
	  echo dirgeso=$dirgeso
	  mkdir -p $dirgeso
	  rc=$?
	  if (( rc == 0 )); then
	    cd $dirgeso
	    rc=$?
	    if (( rc == 0 )); then
	      nmessage=0
	      for file in *.$cycle.*
	      do
		if [[ -f $file ]]; then
		  if (( nmessage == 0 )); then
		    echo dirgeso ALREADY CONTAINS THESE FILES
		    (( nmessage = nmessage + 1 ))
		  fi
		  ls -al $file
		else
		  dirinito=$baseoutput/com/gens/dev/gefs.$yyyymmdd/$cyc/init
		  echo dirinito=$dirinito
		  mkdir -p $dirinito
		  rc=$?
		  if (( rc == 0 )); then
		    if [[ -d $dirinito ]]; then
		      cp $dirgesi/gec00.$cycle.sanl $dirgesi/gec00.$cycle.sfcanl $dirgesi/gep??.$cycle.sanl* .
		      rc=$?
		      if (( rc == 0 )); then
			for file in gep??.$cycle.sanl*
			do
			  ln -f $file $dirinito/$file
			  rc=$?
			  if (( rc == 0 )); then
			    ls -al  $file $dirinito/$file
			  else
			    echo ln -f $file $dirinito/$file FAILED rc=$rc
			  fi
			  if [[ -f $file ]]; then
			    filesfc=`echo $file | sed -e"s/sanl/sfcanl/"`
			    echo filesfc=$filesfc
			    ln -f gec00.$cycle.sfcanl $filesfc
			    rc=$?
			    if (( rc == 0 )); then
			      ls -al gec00.$cycle.sfcanl $filesfc
			      ln -f $filesfc $dirinito/$filesfc
			      rc=$?
			      if (( rc == 0 )); then
				ls -al  $dirinito/$file/$filesfc
			      else
				echo ln -f $filesfc $dirinito/$filesfc FAILED rc=$rc
			      fi
			    else
			      echo ln -f gec00.$cycle.sanl $filesfc FAILED rc=$rc
			    fi
			  else
			    echo file=$file DOES NOT EXIST AS A FILE
			  fi
			done
			for suffix in sanl sfcanl
			do
			  ln -f gec00.$cycle.$suffix $dirinito/gec00.$cycle.$suffix
			  rc=$?
			  if (( rc == 0 )); then
			    ls -al gec00.$cycle.$suffix $dirinito/gec00.$cycle.$suffix
			  else
			    echo ln -f gec00.$cycle.$suffix $dirinito/gec00.$cycle.$suffix FAILED rc=$rc
			  fi
			done
		      else
			echo cp $dirgesi/gec00.$cycle.sanl $dirgesi/gep??.$cycle.sanl* . FAILED rc=$?
		      fi
		    else
		      echo dirinito=$dirinito DOES NOT EXIST AS A DIRECTORY
		    fi
		  else
		    echo mkdir -p $dirinito FAILED rc=$rc
		  fi
		fi
	      done
	    else
	      echo cd $dirgeso FAILED rc=$rc
	    fi
	  else
	    echo mkdir -p $dirgeso FAILED rc=$rc
	  fi
	else
	  echo dirgesi=$dirgesi DOES NOT EXIST AS A DIRECTORY
	  goodargs=no
	fi
      fi
    else
      echo dirgi=$dirgi DOES NOT EXIST
    fi
  fi
fi
if [[ $goodargs != yes ]]; then
  echo
  ls -ald /nwges/prod/gefs* /nwges/prod/gefs*/gec00.*.sfcanl
  echo
  echo $0 "requires at least one argument yyyymmddhh [expin]"
  echo "      where yyyymmddhh is the cycle to copy from nwges"
  echo "      and expin is prod [default], para, test," 
  echo "                or your expin to copy from"
fi
echo `date` $0 $* end
