  Beginning Test, file ESMF_LocalArrayDataUTest.F90, line          75
  NUMBER_OF_PROCESSORS           1
  PASS  Creating a LocalArray from an allocated F90 array pointer, ESMF_LocalArr
 ayDataUTest.F90, line          90
  PASS  Printing LocalArray created from allocated F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line          98
  PASS  Obtaining access to data in LocalArray via F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         106
  PASS  Verifying data in LocalArray via F90 array pointer access, ESMF_LocalArr
 ayDataUTest.F90, line         117
  PASS  Obtaining access to data in LocalArray via F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         132
  PASS  Verifying that original data was not overridden by copy, ESMF_LocalArray
 DataUTest.F90, line         143
  PASS  Verifying data in LocalArray via F90 array pointer access, ESMF_LocalArr
 ayDataUTest.F90, line         154
  PASS  Destroying LocalArray created from an allocated F90 array pointer, ESMF_
 LocalArrayDataUTest.F90, line         163
  PASS  Creating a LocalArray from an allocated F90 Pointer within derived type,
  ESMF_LocalArrayDataUTest.F90, line         186
  PASS  Printing LocalArray created from an allocated F90 Pointer within derived
  type, ESMF_LocalArrayDataUTest.F90, line         195
  PASS  Obtaining access to data in LocalArray via F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         203
  PASS  Verifying data in LocalArray via F90 array pointer access, ESMF_LocalArr
 ayDataUTest.F90, line         214
  PASS  Obtaining access to data in LocalArray via F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         229
  PASS  Verifying data in LocalArray via F90 array pointer access, ESMF_LocalArr
 ayDataUTest.F90, line         240
  PASS  Verifying that original data was overridden by reference, ESMF_LocalArra
 yDataUTest.F90, line         251
  PASS  Destroying LocalArray created from an allocated F90 Pointer within deriv
 ed type, ESMF_LocalArrayDataUTest.F90, line         260
  PASS  Creating a LocalArray from an allocated F90 array pointer, ESMF_LocalArr
 ayDataUTest.F90, line         284
  PASS  Printing LocalArray created from allocated F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         292
  PASS  Obtaining access to data in LocalArray via F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         300
  PASS  Verifying data in LocalArray via F90 array pointer access, ESMF_LocalArr
 ayDataUTest.F90, line         313
  PASS  Obtaining access to data in LocalArray via F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         330
  PASS  Verifying data in LocalArray via F90 array pointer access, ESMF_LocalArr
 ayDataUTest.F90, line         343
  PASS  Verifying that original data was overridden by reference, ESMF_LocalArra
 yDataUTest.F90, line         356
  PASS  Destroying LocalArray created from an allocated F90 array pointer, ESMF_
 LocalArrayDataUTest.F90, line         365
  PASS  Creating a LocalArray from an allocated F90 array pointer slice (:,:), E
 SMF_LocalArrayDataUTest.F90, line         395
  PASS  Printing LocalArray created from allocated F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         403
  PASS  Obtaining access to data in LocalArray via F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         411
  PASS  Verifying data in LocalArray via F90 array pointer access, ESMF_LocalArr
 ayDataUTest.F90, line         424
  PASS  Obtaining access to data in LocalArray via F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         441
  PASS  Verifying data in LocalArray via F90 array pointer access, ESMF_LocalArr
 ayDataUTest.F90, line         454
  PASS  Verifying that original data was overridden by reference, ESMF_LocalArra
 yDataUTest.F90, line         467
  PASS  Destroying LocalArray created from an allocated F90 array pointer, ESMF_
 LocalArrayDataUTest.F90, line         476
  PASS  Creating a LocalArray from an allocated F90 array pointer slice (:,:), E
 SMF_LocalArrayDataUTest.F90, line         490
  PASS  Printing LocalArray created from allocated F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         498
  PASS  Obtaining access to data in LocalArray via F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         506
  PASS  Verifying data in LocalArray via F90 array pointer access, ESMF_LocalArr
 ayDataUTest.F90, line         519
  PASS  Obtaining access to data in LocalArray via F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         536
  PASS  Verifying data in LocalArray via F90 array pointer access, ESMF_LocalArr
 ayDataUTest.F90, line         549
  PASS  Verifying that original data was overridden by reference, ESMF_LocalArra
 yDataUTest.F90, line         562
  PASS  Destroying LocalArray created from an allocated F90 array pointer, ESMF_
 LocalArrayDataUTest.F90, line         571
  PASS  Creating a LocalArray from an allocated F90 array pointer slice (:,:), E
 SMF_LocalArrayDataUTest.F90, line         584
  PASS  Printing LocalArray created from allocated F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         592
  PASS  Obtaining access to data in LocalArray via F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         600
  PASS  Verifying data in LocalArray via F90 array pointer access, ESMF_LocalArr
 ayDataUTest.F90, line         613
  PASS  Obtaining access to data in LocalArray via F90 array pointer, ESMF_Local
 ArrayDataUTest.F90, line         630
  PASS  Verifying data in LocalArray via F90 array pointer access, ESMF_LocalArr
 ayDataUTest.F90, line         643
  PASS  Verifying that original data was overridden by reference, ESMF_LocalArra
 yDataUTest.F90, line         656
  PASS  Destroying LocalArray created from an allocated F90 array pointer, ESMF_
 LocalArrayDataUTest.F90, line         665
  Number of failed tests:           0
  Ending Test, file ESMF_LocalArrayDataUTest.F90, line         672
LocalArrayPrint: Array at address 0x0236e020:
            rank = 1, kind = 3, base_addr = 0x0236e3a0
            dim[0] = 7  
  Integer, *4, Dim 1, Data values:
(-12) =  -12000
(-11) =  -11000
(-10) =  -10000
(-9) =  -9000
(-8) =  -8000
(-7) =  -7000
(-6) =  -6000
LocalArrayPrint: Array at address 0x0236e020:
            rank = 1, kind = 3, base_addr = 0x0236dfe0
            dim[0] = 7  
  Integer, *4, Dim 1, Data values:
(-12) =  -12011
(-11) =  -11011
(-10) =  -10011
(-9) =  -9011
(-8) =  -8011
(-7) =  -7011
(-6) =  -6011
LocalArrayPrint: Array at address 0x0236e4a0:
            rank = 2, kind = 3, base_addr = 0x0236e040
            dim[0] = 10  dim[1] = 6  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  1001
( 2, 1) =  1002
( 3, 1) =  1003
( 4, 1) =  1004
( 5, 1) =  1005
( 6, 1) =  1006
( 7, 1) =  1007
( 8, 1) =  1008
( 9, 1) =  1009
(10, 1) =  1010
  skipping to end ...
( 1, 6) =  6001
( 2, 6) =  6002
( 3, 6) =  6003
( 4, 6) =  6004
( 5, 6) =  6005
( 6, 6) =  6006
( 7, 6) =  6007
( 8, 6) =  6008
( 9, 6) =  6009
(10, 6) =  6010
LocalArrayPrint: Array at address 0x02373dc0:
            rank = 2, kind = 3, base_addr = 0x0236dfe0
            dim[0] = 100  dim[1] = 60  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  1001
( 2, 1) =  1002
( 3, 1) =  1003
( 4, 1) =  1004
( 5, 1) =  1005
( 6, 1) =  1006
( 7, 1) =  1007
( 8, 1) =  1008
( 9, 1) =  1009
(10, 1) =  1010
  skipping to end ...
(91,60) =  60091
(92,60) =  60092
(93,60) =  60093
(94,60) =  60094
(95,60) =  60095
(96,60) =  60096
(97,60) =  60097
(98,60) =  60098
(99,60) =  60099
(100,60) =  60100
LocalArrayPrint: Array at address 0x02373dc0:
            rank = 2, kind = 3, base_addr = 0x0236fd90
            dim[0] = 100  dim[1] = 1  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  20058
( 2, 1) =  20059
( 3, 1) =  20060
( 4, 1) =  20061
( 5, 1) =  20062
( 6, 1) =  20063
( 7, 1) =  20064
( 8, 1) =  20065
( 9, 1) =  20066
(10, 1) =  20067
  skipping to end ...
(91, 1) =  20148
(92, 1) =  20149
(93, 1) =  20150
(94, 1) =  20151
(95, 1) =  20152
(96, 1) =  20153
(97, 1) =  20154
(98, 1) =  20155
(99, 1) =  20156
(100, 1) =  20157
LocalArrayPrint: Array at address 0x02373dc0:
            rank = 2, kind = 3, base_addr = 0x0236ef80
            dim[0] = 100  dim[1] = 15  
  Integer, *4, Dim 2, Data values:
( 1, 1) =  11058
( 2, 1) =  11059
( 3, 1) =  11060
( 4, 1) =  11061
( 5, 1) =  11062
( 6, 1) =  11063
( 7, 1) =  11064
( 8, 1) =  11065
( 9, 1) =  11066
(10, 1) =  11067
  skipping to end ...
(91,15) =  25148
(92,15) =  25149
(93,15) =  25150
(94,15) =  25151
(95,15) =  25152
(96,15) =  25153
(97,15) =  25154
(98,15) =  25155
(99,15) =  25156
(100,15) =  25157
