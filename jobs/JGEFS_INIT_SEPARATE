#!/bin/ksh 

echo `date` $0 `date -u` begin

set -xa
export PS4='$SECONDS + '
date
####################################

# 01/28/2013 New variables added for WCOSS and cross-machine unfication
export gefsmachine=${gefsmachine:-wcoss}
export gefsmpexec=${gefsmpexec:-mpirun.lsf}

export APRUN=${gefsmpexec:-mpirun.lsf}


if [[ $gefsmachine = zeus ]]; then
   export  APRUN="$gefsmpexec $basesource/nw$envir/exec/zeus-poe"
fi


###########################################
# Run gefs_config to get input parameters
###########################################
if [ "$RUN_ENVIR" = dev ]   ### For Developers
then
# . $basesource/nw${envir}/versions/gefs.ver
  . $basesource/nwdev/parm/gefs_config
fi

####################################
# obtain unique process id (pid) and make working directory
####################################
export pid=$$
  export DATA=$DATAROOT/gefs_init_$PDY$cyc.$envir.save

echo DATA=$DATA
if [[ -d $DATA ]]; then
  rm -rf $DATA
fi
mkdir -p $DATA
cd $DATA

export cycle=t${cyc}z
export cycle_fcst=t${cyc_fcst}z

echo cyc=$cyc cyc_fcst=$cyc_fcst
echo cycle=$cycle cycle_fcst=$cycle_fcst

if (( cyc == cyc_fcst )); then
  export cycsuffix=false
  export fcstlong=true
else
  export fcstlong=false
  export cycsuffix=true
fi

echo fcstlong=$fcstlong
echo cycsuffix=$cycsuffix

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gens}
export RUN=${RUN:-gefs}

####################################
# File To Log Msgs
####################################
  export jlogfile=${jlogfile:-$baselog/com/logs/jlogfile}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

####################################
# SAVEGES  - Copy Files From TMPDIR to $GESdir
# RMGES    - Clean Files in $GESdir
# SENDSMS  - Flag Events on SMS
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# RERUN    - Rerun posts from beginning (default no)
# VERBOSE  - Specify Verbose Output in global_postgp.sh
####################################
  export SENDCOM=${SENDCOM:-YES}
  export SENDECF=${SENDECF:-YES}
  export RERUN=${RERUN:-NO}
  export SAVEGES=${SAVEGES:-YES}
  export VERBOSE=${VERBOSE:-YES}

###testb
if [[ $envir = prod ]]; then
###teste
if [ $cyc -eq 00 -o $cyc -eq 12 ]
then
   export SENDDBN=YES
else
   export SENDDBN=YES
fi
###testb
else
   export SENDDBN=NO
fi
###teste

 
####################################
# Specify Execution Areas
####################################
export HOMEgefs=${HOMEgefs:-$NWROOT/gefs.${gefs_ver}}
export HOMEgsm=${HOMEgsm:-$NWROOT/gsm.${gsm_ver}}
export HOMEenkf=${HOMEenkf:-$NWROOTp1/enkf.${enkf_ver}}

  export EXECgsm=${EXECgsm:-$HOMEgsm/exec}
  export USHgsm=${USHgsm:-$HOMEgsm/ush}
  export FIXgsm=${FIXgsm:-$HOMEgsm/fix/fix_am}
  export PARMgsm=${PARMgsm:-$HOMEgsm/parm}

  export FIXGLOBAL=$FIXgsm

  export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
  export USHgefs=${USHgefs:-$HOMEgefs/ush}
  export FIXgefs=${FIXgefs:-$HOMEgefs/fix}
  export PARMgefs=${PARMgefs:-$HOMEgefs/parm}

export ERRSCRIPT=err_chk
export LOGSCRIPT=startmsg
export REDOUT='1>>'
export REDERR='2>'

##############################################
echo set parameters using gefs.parm
##############################################
. $PARMgefs/gefs.parm
. $PARMgefs/gefs_init.parm

echo
env | sort
echo

##############################
# Run setup to initialize working directory and utility scripts
##############################
#ksh $USHutil/setup.sh

##############################
# Run setpdy and initialize PDY variables
##############################
setpdy.sh
. PDY

##############################################
# for global_chgres.sh
##############################################
#export SLMASK=/dev/null

##############################################
# Define COM directories
##############################################
 if [[ "$gfssource" = para ]]; then
    export GFSCOMIN=$COMROOT/gfs/para/gfs.$PDY
    export ENKFCOMIN=$COMROOT/gfs/para/enkf.
  elif [[ "$gfssource" = prod ]]; then
    export GFSCOMIN=$COMROOT/gfs/prod/gfs.$PDY
    export ENKFCOMIN=$COMROOT/gfs/prod/enkf.
  else
    export GFSCOMIN=$COMROOT/gfs/prod/gfs.$PDY
    export ENKFCOMIN=$COMROOT/gfs/prod/enkf.
  fi

export COMIN=$COMROOT/${NET}/${envir}/gefs.${PDY}
export COM=$COMROOT/${NET}/${envir}
export COMINm1=$COMROOT/${NET}/${envir}/gefs.${PDYm1}
export COMINm2=$COMROOT/${NET}/${envir}/gefs.${PDYm2}
export COMINm3=$COMROOT/${NET}/${envir}/gefs.${PDYm3}
export COMINm4=$COMROOT/${NET}/${envir}/gefs.${PDYm4}

export COMOUT=$COMROOT/${NET}/${envir}/gefs.${PDY}

export gespath=$GESROOT/${envir}


#export pdycycp=`/nwprod/util/exec/ndate -$fhrp $PDY$cyc`
export pdycycp=`$NDATE -$fhrp $PDY$cyc`
export pdyp=`echo $pdycycp|cut -c1-8`
export cycp=`echo $pdycycp|cut -c9-10`

echo pdycycp=$pdycycp pdyp=$pdyp cycp=$cycp

  if (($inflag == 6)) ; then
  export COMSFCSIGP=$COM/gefs.$pdyp/$cycp/sfcsig_enkf
  export COMTRACKP=$COM/gefs.$pdyp/$cycp/track_enkf
  else
  export COMSFCSIGP=$COM/gefs.$pdyp/$cycp/sfcsig
  export COMTRACKP=$COM/gefs.$pdyp/$cycp/track
  fi

###teste
mkdir -m 775 -p $COMOUT/$cyc/init
mkdir -m 775 -p $COMOUT/$cyc/sflux

##############################################
# Define GES directories
##############################################

export GESdir=$gespath/gefs.${PDY}
mkdir -m 775 -p $GESdir

##############################################
echo locations of scripts and executables
##############################################

echo location of sighdr executable

sighdrexec=$EXECgsm/global_sighdr

echo sighdrexec=$sighdrexec

echo location of chgres script and executable
export CHGRESTHREAD=$NTHREADS_SIGCHGRS
# Change Resolution script and executable

   export chgresush=$USHgsm/global_chgres.sh
   export CHGRESEXEC=$EXECgsm/global_chgres

case $gefsmachine in
 (zeus)
   export chgresush=/scratch1/portfolios/NCEPDEV/ensemble/save/wx20dh/SVN/GFS_TRUNK_37800/ush/global_chgres.sh
   export CHGRESEXEC=/scratch1/portfolios/NCEPDEV/ensemble/save/wx20dh/SVN/GFS_TRUNK_37800/exec/global_chgres
 ;;
esac

echo chgresush=$chgresush
echo CHGRESEXEC=$CHGRESEXEC

##############################################
echo list environment before running script
##############################################

echo
env | sort
echo

#############################################################
# Execute the script
$HOMEgefs/scripts/exgefs_init_separate.sh.ecf
#############################################################

cat $pgmout

msg="JOB COMPLETED NORMALLY"
postmsg "$jlogfile" "$msg"

##############################
# Save the working directory
# for the ET and COMBINE jobs
##############################

echo `date` $0 `date -u` end
