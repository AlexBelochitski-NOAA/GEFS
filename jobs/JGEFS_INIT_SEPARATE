#!/bin/ksh 

echo `date` $0 `date -u` begin

set -xa
export PS4='$SECONDS + '
date
###########################################
# Run gefs_config_dev to get input parameters
###########################################
if [ "$RUN_ENVIR" = dev ]   ### For Developers
then
  . $basesource/nwdev/parm/gefs_config_dev
fi
export APRUN=${gefsmpexec:-mpirun}

############################
# Set up cycle varaible
############################
export cycle=t${cyc}z
export cycle_fcst=t${cyc_fcst}z


if (( cyc == cyc_fcst )); then
  export cycsuffix=false
  export fcstlong=true
else
  export fcstlong=false
  export cycsuffix=true
fi

####################################
# obtain unique process id (pid) and make temporary working directory
####################################
export pid=$$
export DATATEMP=$DATAROOT/${job}.${pid}.temp

echo DATATEMP=$DATATEMP
if [[ -d $DATATEMP ]]; then
  rm -rf $DATATEMP
fi
mkdir -p $DATATEMP
cd $DATATEMP

##############################
# Run setpdy and initialize PDY variables
##############################
setpdy.sh
. PDY

rm -rf $DATATEMP

####################################
# make saved working directory
####################################
  export DATA=$DATAROOT/gefs_init_$PDY$cyc.$envir.save

echo DATA=$DATA
if [[ -d $DATA ]]; then
  rm -rf $DATA
fi
mkdir -p $DATA
cd $DATA

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gens}
export RUN=${RUN:-gefs}

####################################
# File To Log Msgs
####################################
  export jlogfile=${jlogfile:-${DATA}/jlogfile}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

 
####################################
# Specify Execution Areas
####################################
export HOMEgefs=${HOMEgefs:-$NWROOT/gefs.${gefs_ver}}
export HOMEgsm=${HOMEgsm:-$NWROOT/gsm.${gsm_ver}}
export HOMEenkf=${HOMEenkf:-$NWROOT/enkf.${enkf_ver}}

#This part is used for nemsio reading
export EXECgsm=${EXECgsm:-$HOMEgsm/exec}
export FIXgsm=${FIXSUBDA:-$HOMEgsm/fix/fix_am}
export FIXGLOBAL=$FIXgsm
#This part is only used in sigio reading 
# export USHgsm=${USHgsm:-$HOMEgsm/ush}
# export FIXgsm=${FIXgsm:-$HOMEgsm/fix/fix_am}
# export PARMgsm=${PARMgsm:-$HOMEgsm/parm}

  export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
  export USHgefs=${USHgefs:-$HOMEgefs/ush}
  export UTILgefs=${UTILgefs:-$HOMEgefs/util}
  export FIXgefs=${FIXgefs:-$HOMEgefs/fix}
  export PARMgefs=${PARMgefs:-$HOMEgefs/parm}

  export chgresush=$GLOBALCHGRES
  export sighdrexec=$EXECgsm/global_sighdr
  export CHGRESTHREAD=$NTHREADS_SIGCHGRS
  export getnsttf=$UTILgefs/exec/getnsttf.x

##############################################
echo set parameters using gefs.parm
##############################################
. $PARMgefs/gefs.parm
. $PARMgefs/gefs_init.parm

### echo Looking  the earlier EnKF  
#cycles from fhrpstart back to fhrpend  (hr)
export fhrpstart=$fhrp
export fhrpend=96
 
env | sort



##############################################
# Define COM directories
##############################################
d6ahead_ymdh=` $NDATE 6 ${PDY}${cyc}`
d6ago_ymdh=` $NDATE -6 ${PDY}${cyc}`
export d6ahead_ymd=`echo $d6ahead_ymdh|cut -c1-8`
export d6ago_ymd=`echo $d6ago_ymdh|cut -c1-8`

export COMINgfs=${COMINgfs:-$(compath.py gfs/prod/gfs.$PDY)/$cyc}
export COMINgfs6ago=${COMINgfs6ago:-$(compath.py gfs/prod/gfs.$d6ago_ymd)}
export COMINgfs6ahead=${COMINgfs6ahead:-$(compath.py gfs/prod/gfs.$d6ahead_ymd)}
export COMINenkf=${COMINenkf:-$(compath.py gfs/prod)/enkfgdas.}
export COMINens_tracker_gfs=${COMINens_tracker_gfs:-$(compath.py ens_tracker/prod/gfs.$PDY)/$cyc/tctrack}

export COM_IN=${COM_IN:-${COMROOT}/${NET}/${envir}}
export COM_OUT=${COM_OUT:-${COMROOT}/${NET}/${envir}}

export COMIN=${COMIN:-${COM_IN}/${RUN}.${PDY}}
export COMOUT=${COMOUT:-${COM_OUT}/${RUN}.${PDY}}

export COMINm1=${COMINm1:-${COM_IN}/${RUN}.${PDYm1}}
export COMINm2=${COMINm2:-${COM_IN}/${RUN}.${PDYm2}}
export COMINm3=${COMINm3:-${COM_IN}/${RUN}.${PDYm3}}
export COMINm4=${COMINm4:-${COM_IN}/${RUN}.${PDYm4}}




export pdycycp=`$NDATE -$fhrp $PDY$cyc`
export pdyp=`echo $pdycycp|cut -c1-8`
export cycp=`echo $pdycycp|cut -c9-10`


  if (($inflag == 6)) ; then
  export COMSFCSIGP=$COM_IN/${RUN}.$pdyp/$cycp/sfcsig_enkf
  export COMTRACKP=$COM_IN/${RUN}.$pdyp/$cycp/track_enkf
  else
  export COMSFCSIGP=$COM_IN/${RUN}.$pdyp/$cycp/sfcsig
  export COMTRACKP=$COM_IN/${RUN}.$pdyp/$cycp/track
  fi
###teste
mkdir -m 775 -p $COMOUT/$cyc/init
mkdir -m 775 -p $COMOUT/$cyc/sflux

##############################################
# Define GES directories
##############################################
export GESOUT=${GESOUT:-$GESROOT/${envir}}
export GESOUT=$GESOUT/gefs.${PDY}
mkdir -m 775 -p $GESOUT

##############################################
echo locations of scripts and executables
##############################################

#echo location of sighdr executable
#
#export sighdrexec=$EXECgsm/global_sighdr
#
#
#echo location of chgres script and executable
#export CHGRESTHREAD=$NTHREADS_SIGCHGRS
## Change Resolution script and executable
#
##  export chgresush=$USHgsm/global_chgres.sh
##  export CHGRESEXEC=$EXECgsm/global_chgres
#
##case $gefsmachine in
## (zeus)
##   export chgresush=/scratch1/portfolios/NCEPDEV/ensemble/save/wx20dh/SVN/GFS_TRUNK_37800/ush/global_chgres.sh
##   export CHGRESEXEC=/scratch1/portfolios/NCEPDEV/ensemble/save/wx20dh/SVN/GFS_TRUNK_37800/exec/global_chgres
## ;;
##esac


##############################################
echo list environment before running script
##############################################

env | sort

#############################################################
# Execute the script
$HOMEgefs/scripts/exgefs_init_separate.sh.ecf
#############################################################

cat $pgmout

msg="JOB COMPLETED NORMALLY"
postmsg "$jlogfile" "$msg"

##############################
# Save the working directory
# for the ET and COMBINE jobs
##############################

echo `date` $0 `date -u` end
