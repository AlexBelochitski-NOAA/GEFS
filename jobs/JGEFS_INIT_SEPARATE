#!/bin/ksh 

$SMSBIN/smsinit $LOADL_STEP_ID 
echo `date` $0 `date -u` begin

set -xa
####################################

# 01/28/2013 New variables added for WCOSS and cross-machine unfication
export gefsmachine=${gefsmachine:-wcoss}
export gefsmpexec=${gefsmpexec:-mpirun.lsf}

if [[ $gefsmachine = zeus ]]; then
   export  gefspoe="$gefsmpexec $basesource/nw$envir/exec/zeus-poe"
 else
     export gefspoe=$gefsmpexec
 fi


###########################################
# Run gefs_config to get input parameters
###########################################
if [ "$RUN_ENVIR" = dev ]   ### For Developers
then
################# lines between these markers have been modified for dev begin
  . $basesource/nwdev/parm/gefs_config
else
   VERSION_FILE=/nw{$envir}/versions/gefs.ver
   if [-f $VERSION_FILE]; then
    . $VERSION_FILE
   else
    ecflow_client --abort
    exit
   fi
fi

export HOMEgefs=${HOMEgefs}
export HOMEgsm=${HOMEgsm}
export HOMEutil=${HOMEutil:-/nwprod/util}

# #### 05/05/99 ###############################
# SETUP ENS INITIALIZATION PROCESSING VARIABLES
# #############################################
export PS4='$SECONDS + '

####################################
# obtain unique process id (pid) and make working directory
####################################
export pid=$$
if [ "$RUN_ENVIR" = dev ]    ### For Developers
then
  export DATA_IN=${DATA_IN:-$basetmp/tmpnwprd}
else
  export DATA_IN=/tmpnwprd
fi

  export DATA=$DATA_IN/gefs_init_$PDY$cyc.$envir.save

echo DATA=$DATA
if [[ -d $DATA ]]; then
  rm -rf $DATA
fi
mkdir -p $DATA
cd $DATA

export cycle=t${cyc}z
export cycle_fcst=t${cyc_fcst}z

echo cyc=$cyc cyc_fcst=$cyc_fcst
echo cycle=$cycle cycle_fcst=$cycle_fcst

if (( cyc == cyc_fcst )); then
  export cycsuffix=false
  export fcstlong=true
else
  export fcstlong=false
  export cycsuffix=true
fi

echo fcstlong=$fcstlong
echo cycsuffix=$cycsuffix

####################################
# Specify NET and RUN Name and model
####################################
export NET=gens
export RUN=enstr

####################################
# File To Log Msgs
####################################
if [ "$RUN_ENVIR" = dev ]     ### For Developers
then
  export jlogfile=${jlogfile:-$baselog/com/logs/jlogfile}
else
  export jlogfile=/com/logs/para/jlogfile
fi

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

####################################
# SAVEGES  - Copy Files From TMPDIR to $GESdir
# RMGES    - Clean Files in $GESdir
# SENDSMS  - Flag Events on SMS
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# RERUN    - Rerun posts from beginning (default no)
# VERBOSE  - Specify Verbose Output in global_postgp.sh
####################################
export SAVEGES=YES
export SENDSMS=YES
export SENDCOM=YES
export RERUN=NO
export VERBOSE=YES

###testb
if [[ $envir = prod ]]; then
###teste
if [ $cyc -eq 00 -o $cyc -eq 12 ]
then
   export SENDDBN=YES
else
   export SENDDBN=YES
fi
###testb
else
   export SENDDBN=NO
fi
###teste

 
####################################
# Specify Execution Areas
####################################
if [ "$RUN_ENVIR" = dev ]         ### For Developers
then
  export HOMEGSM=${HOMEGSM:-/nw${envir}}
  export EXECGSM=${EXECGSM:-$HOMEGSM/exec}
  export USHGSM=${USHGSM:-$HOMEGSM/ush}
  export FIXGSM=${FIXGSM:-$HOMEGSM/fix/fix_am}
  export PARMGSM=${PARMGSM:-$HOMEGSM/parm}

  export EXECGLOBAL=${EXECGSM:-$HOMEGSM/exec}
  export USHGLOBAL=${USHGSM:-$HOMEGSM/ush}
  export FIXGLOBAL=${FIXGSM:-$HOMEGSM/fix/fix_am}

# export HOMEGLOBAL=${HOMEGLOBAL:-/nw${envir}}
# export EXECGLOBAL=${EXECGSM:-$HOMEGSM/exec}
# export USHGLOBAL=${USHGSM:-$HOMEGSM/ush}
# export FIXGLOBAL=${FIXGSM:-$HOMEGSM/fix/fix_am}

  export HOMEgefs=${HOMEgefs:-/nw${envir}}
  export EXECgefs=${EXECgefs:-$HOMEGEFS/exec}
  export USHGgefs=${USHgefs:-$HOMEGEFS/ush}
  export FIXgefs=${FIXgefs:-$HOMEGEFS/fix}
  export PARMgefs=${PARMgefs:-$HOMEGEFS/parm}
  export USHGLOBAL=$USHgefs

else                             ### For Operations

  export HOMEGSM=/nw${envir}
  export EXECGSM=$HOMEGSM/exec
  export USHGSM=$HOMEGSM/ush
  export FIXGSM=$HOMEGSM/fix/fix_am
  export PARMGSM=$HOMEGSM/parm

  export HOMEGLOBAL=/nwprod
  export EXECGLOBAL=$HOMEGSM/exec
  export USHGLOBAL=$HOMEGSM/ush
  export FIXGLOBAL=$HOMEGSM/fix/fix_am
  export PARMGLOBAL=$HOMEGSM/parm

  export HOMEGEFS=/nw${envir}
  export EXECGEFS=$HOMEGEFS/exec
  export USHGEFS=$HOMEGEFS/ush
  export FIXGEFS=$HOMEGEFS/fix
  export PARMGEFS=$HOMEGEFS/parm
fi


export ERRSCRIPT=err_chk
export LOGSCRIPT=startmsg
export REDOUT='1>>'
export REDERR='2>'

##############################################
echo set parameters using gefs.parm
##############################################
. $PARMGEFS/gefs.parm
. $PARMGEFS/gefs_init.parm

echo
env | sort
echo

##############################
# Set up the UTILITIES
##############################
export utilscript=$HOMEutil/ush
export EXECutil=$HOMEutil/exec

##############################
# Run setup to initialize working directory and utility scripts
##############################
ksh $utilscript/setup.sh

##############################
# Run setpdy and initialize PDY variables
##############################
sh $utilscript/setpdy.sh
. PDY

##############################################
# for global_chgres.sh
##############################################
#export SLMASK=/dev/null

##############################################
# Define COM directories
##############################################
if [ "$RUN_ENVIR" = dev ]         ### For Developers
then
 if [[ "$gfssource" = para ]]; then
    export GFSCOMIN=$TMPCOM/gfs/para/gfs.$PDY
    export ENKFCOMIN=$TMPCOM/gfs/para/enkf.
  elif [[ "$gfssource" = prod ]]; then
    export GFSCOMIN=$TMPCOM/gfs/prod/gfs.$PDY
    export ENKFCOMIN=$TMPCOM/gfs/prod/enkf.
  else
    export GFSCOMIN=/com/gfs/prod/gfs.$PDY
    export ENKFCOMIN=/com/gfs/prod/enkf.
  fi
else
  if [[ "$gfssource" = para ]]; then
    export GFSCOMIN=/com/gfs/para/gfs.$PDY
    export ENKFCOMIN=/com/gfs/para/enkf.
  elif [[ "$gfssource" = prod ]]; then
    export GFSCOMIN=/com/gfs/prod/gfs.$PDY
    export ENKFCOMIN=/com/gfs/prod/enkf.
  else
    export GFSCOMIN=$baseptmp/com/gfs/${envir}/gfs.$PDY
    export GFSCOMIN=$baseptmp/com/gfs/${envir}/gfs.$PDY
   fi
fi
if [ "$RUN_ENVIR" = dev ]         ### For Developers
then
export COMIN=$baseoutput/com/${NET}/${envir}/gefs.${PDY}
export COM=$baseoutput/com/${NET}/${envir}
export COMINm1=$baseoutput/com/${NET}/${envir}/gefs.${PDYm1}
export COMINm2=$baseoutput/com/${NET}/${envir}/gefs.${PDYm2}
export COMINm3=$baseoutput/com/${NET}/${envir}/gefs.${PDYm3}
export COMINm4=$baseoutput/com/${NET}/${envir}/gefs.${PDYm4}

export COMOUT=$baseoutput/com/${NET}/${envir}/gefs.${PDY}

else

export COMIN=/com/${NET}/${envir}/gefs.${PDY}
export COM=/com/${NET}/${envir}
export COMINm1=/com/${NET}/${envir}/gefs.${PDYm1}
export COMINm2=/com/${NET}/${envir}/gefs.${PDYm2}
export COMINm3=/com/${NET}/${envir}/gefs.${PDYm3}
export COMINm4=/com/${NET}/${envir}/gefs.${PDYm4}

export COMOUT=/com/${NET}/${envir}/gefs.${PDY}
fi

#export pdycycp=`/nwprod/util/exec/ndate -$fhrp $PDY$cyc`
export pdycycp=`$EXECutil/ndate -$fhrp $PDY$cyc`
export pdyp=`echo $pdycycp|cut -c1-8`
export cycp=`echo $pdycycp|cut -c9-10`

echo pdycycp=$pdycycp pdyp=$pdyp cycp=$cycp

  if (($inflag == 6)) ; then
  export COMSFCSIGP=$COM/gefs.$pdyp/$cycp/sfcsig_enkf
  export COMTRACKP=$COM/gefs.$pdyp/$cycp/track_enkf
  else
  export COMSFCSIGP=$COM/gefs.$pdyp/$cycp/sfcsig
  export COMTRACKP=$COM/gefs.$pdyp/$cycp/track
  fi

###teste
mkdir -m 775 -p $COMOUT/$cyc/init
mkdir -m 775 -p $COMOUT/$cyc/sflux

##############################################
# Define GES directories
##############################################
if [ "$RUN_ENVIR" = dev ]         ### For Developers
then
gespath=$baseoutput/nwges/${envir}
else
gespath=/nwges/${envir}
fi
export GESdir=$gespath/gefs.${PDY}
mkdir -m 775 -p $GESdir

##############################################
echo locations of scripts and executables
##############################################

echo location of sighdr executable

sighdrexec=$EXECGLOBAL/global_sighdr

echo sighdrexec=$sighdrexec

echo location of chgres script and executable
export CHGRESTHREAD=$NTHREADS_SIGCHGRS
# Change Resolution script and executable

   export chgresush=$USHGLOBAL/global_chgres.sh
   export CHGRESEXEC=$EXECGLOBAL/global_chgres

if [ "$RUN_ENVIR" = dev ]         ### For Developers
then
case $gefsmachine in
 (ccs)
   export chgresush=$USHGLOBAL/global_chgres.sh
   export CHGRESEXEC=$EXECGLOBAL/global_chgres_thread
 ;;
 (zeus)
   export chgresush=/scratch1/portfolios/NCEPDEV/ensemble/save/wx20dh/SVN/GFS_TRUNK_37800/ush/global_chgres.sh
   export CHGRESEXEC=/scratch1/portfolios/NCEPDEV/ensemble/save/wx20dh/SVN/GFS_TRUNK_37800/exec/global_chgres
 ;;
 (wcoss)
   export chgresush=/ensemble/save/Dingchen.Hou/SVN/GSM_V12.0.0/ush/global_chgres.sh
   export CHGRESEXEC=/ensemble/save/Dingchen.Hou/SVN/GSM_V12.0.0/exec/global_chgres
 ;;
esac
fi

echo chgresush=$chgresush
echo CHGRESEXEC=$CHGRESEXEC

##############################################
echo list environment before running script
##############################################

echo
env | sort
echo

#############################################################
# Execute the script
$HOMEGEFS/scripts/exgefs_init_separate.sh.ecf
#############################################################

cat $pgmout

msg="JOB COMPLETED NORMALLY"
postmsg "$jlogfile" "$msg"

##############################
# Save the working directory
# for the ET and COMBINE jobs
##############################
cd /tmpnwprd

echo `date` $0 `date -u` end
if [ "$RUN_ENVIR" = dev ]      ### For Developers
then
  echo skip endt for testing
else
$SMSBIN/endt
fi
