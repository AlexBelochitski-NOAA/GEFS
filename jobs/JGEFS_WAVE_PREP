#!/bin/ksh

echo "$(date -u) begin $0"

set -xa
if [[ ${STRICT:-NO} == "YES" ]]; then
	# Turn on strict bash error checking
	set -eu
fi
export PS4='$SECONDS + $(basename $0)[$LINENO] '

####################################
# Determine Job Output Name on System
####################################
export jobid=${jobid:-"$job.$LSB_JOBID"}
export pgmout="OUTPUT.${LSB_JOBID}"
export pgmerr=errfile

######################################
# Set up compute resources
######################################
export wavempexec=${wavempexec:-"mpirun -n"}
export wave_mpmd=${wave_mpmd:-"cfp"}
export NTASKS=${total_tasks:-16}

####################################
# Specify and create working directory
####################################
export DATA=${DATA:-${DATAROOT}/${jobid}}
mkdir -p $DATA
mkdir $DATA/INPUT
cd $DATA

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gefs}
export envir=${envir:-prod}
export RUN=${RUN:-gefs}

######################################
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# SENDECF  - Flag Events on ECF
# VERBOSE  - Specify Verbose Output
######################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}
export VERBOSE=${VERBOSE:-YES}

######################################
# Set up the date information
######################################
export cycle=t${cyc}z
setpdy.sh
source PDY

####################################
# Specify Execution Areas
####################################
export HOMEgefs=${HOMEgefs:-${NWROOT}/gefs.${gefs_ver}}
export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
export PARMgefs=${PARMgefs:-$HOMEgefs/parm}
export FIXwave=${FIXwave:-$HOMEgefs/fix/fix_wave}

##############################################
# Define COM directories
##############################################
export COMIN=$COMROOT/${NET}/${envir}/${RUN}.${PDY}/$cyc/wave
export COMOUT=$COMROOT/${NET}/${envir}/${RUN}.${PDY}/$cyc/wave
if [[ $SENDCOM = YES ]]; then
  mkdir -p $COMOUT/rundata
fi

export COMIN_WAV_ICE=${COMIN_WAV_ICE:-$(compath.py gfs/prod)/${WAVICEPRFX}.${PDY}/${cyc}}

#############################
# Source relevant config files
#############################
configs="gefs gefs_wave gefs_wave_prep"
config_path=${PARMgefs:-$NWROOT/gfs.${gfs_ver}/parm/config}
for config in $configs; do
    . $config_path/$config.parm
    err=$?
    if [[ $err -ne 0 ]]; then
    	echo "FATAL ERROR in $0: Error while loading parm file $config_path"
    	exit $err
    fi
done

export errchk=${errchk:-err_chk}
export wavelog=${COMOUT}/wave.log

echo "Environment before calling script"
env | sort

#############################################################
# Execute the script
$HOMEwave/scripts/exwave_prep.sh
err=$?
if [[ $err == 0 ]]; then
    echo "$job completed normally!"
else
    echo "FATAL ERROR: $job failed!"
fi
#############################################################

##############################
# Remove the Temporary working directory
##############################
cd $DATAROOT
if [ ${KEEPDATA:-NO} = NO ] ; then rm -rf $DATA ; fi

echo "$(date -u) end $0"

exit $err
