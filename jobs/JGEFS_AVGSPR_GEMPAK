#!/bin/sh

########################################
# Runs GEFS AVG and SPR gempak process
########################################

set -xa
# #### 08/25/1999 ###################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + ' 
date

####################################
# obtain unique process id (pid) and make working directory
####################################
export pid=$$
export DATA=${DATA:-${DATAROOT}/${job}.${pid}}
mkdir -p $DATA
cd $DATA

######################################
# Set up the cycle variable
######################################
export cycle=${cycle:-t${cyc}z}

##############################
# Run setpdy and initialize PDY variables
##############################
setpdy.sh
. PDY

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gens}
export RUN=${RUN:-gefs}
export model=${model:-ensemble}

####################################
# File To Log Msgs
####################################
#export jlogfile=${jlogfile:-${COMROOT}/logs/jlogfiles/jlogfile.${job}.${pid}}
export jlogfile=${jlogfile:-${DATA}/jlogfile.${job}.${pid}}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

####################################
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# SENDECF  - Flag Events on ECF
# VERBOSE  - Specify Verbose Output in global_postgp.sh
# GET_IOPROFILE - Run I/O statistics
####################################
export SENDCOM=${SENDCOM:-YES}
export SENDECF=${SENDECF:-YES}
export SENDDBN=${SENDDBN:-YES}
export VERBOSE=${VERBOSE:-NO}
export GET_IOPROFILE=${GET_IOPROFILE:-NO}

################################
# Set up the HOME directory
################################
export HOMEgefs=${HOMEgefs:-$NWROOT/gefs.${gefs_ver}}
export PARMgefs=${PARMgefs:-$HOMEgefs/parm}

######################################
# Set up the GEMPAK directory
#######################################
export GEMPAKgefs=${GEMPAKgefs:-$HOMEgefs/gempak}

############################################
# Run gefs.parm to get input variables
############################################
. $PARMgefs/gefs.parm

############################################
# Set up model and cycle specific variables
############################################
export fstart=${fstart:-0}
export fend=${fhmax:-384}
export finc=${finc:-6}
export finc_0p50=${finc_0p50:-3}

export FHMAXHF=${FHMAXHF:-240}
export FHOUTHF=${FHOUTHF:-3}
export FHOUTLF=${FHOUTLF:-6}

export GRIB=
export EXT=""
export DBN_ALERT_TYPE=${DBN_ALERT_TYPE:-GEFS_GEMPAK}

##############################################
# Define COM directories
##############################################
export COM=${COMROOT}/${NET}/${envir}
# export COMIN=${COMROOT}/${NET}/${envir}/${RUN}.${PDY}/${cyc}/pgrba
export COMIN=${COM}/${RUN}.${PDY}/${cyc}/pgrb2a
export COMIN_P5=${COM}/${RUN}.${PDY}/${cyc}/pgrb2ap5
export COMOUT=${COMROOT}/nawips/${envir}/${RUN}.${PDY}

if [ ! -f $COMOUT ] ; then
    mkdir -p -m 775 $COMOUT
fi
 
env

########################################################
# Execute the script.
for member in avg spr
do
  export member
  export RUN=ge${member}
  for resolution in 1p 0p50
  do

  if [ $GET_IOPROFILE = YES ]; then
     /usrx/local/mio/tools/bin/miostats -X0 \
    # JY  ${NWROOT}/scripts/exnawips.sh.ecf
     echo "$HOMEgefs/scripts/exgefs_nawips.sh.ecf $RUN $member $resolution" >> poescript
  else
     # JY ${NWROOT}/scripts/exnawips.sh.ecf
     echo "$HOMEgefs/scripts/exgefs_nawips.sh.ecf $RUN $member $resolution" >> poescript
  fi
  
  done
done
########################################################

cat poescript

chmod 775 $DATA/poescript
export MP_PGMMODEL=mpmd
export MP_CMDFILE=$DATA/poescript

## Execute the script.

mpirun -n 2 cfp $MP_CMDFILE
ERR=$?
echo $ERR

#cat $pgmout

##################################################
# save the profiling data captured from miostats
##################################################
if [ $GET_IOPROFILE = YES ]; then
    . ${COMROOT}/miostats/.set_IOprofile
    ERR=$?
    echo $ERR
fi

##############################
# Remove the Temporary working directory
##############################
cd $DATAROOT
if [ ${KEEPDATA:-NO} = NO ] ; then rm -rf $DATA ; fi

echo `date` $0 `date -u` end

exit $ERR

