#!/bin/sh

########################################
# Runs GEFS AVG and SPR gempak process
########################################


set -xa
# #### 08/25/1999 ###################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + ' 
date
# 
# obtain unique process id (pid) and make temp directories
#
export pid=$$
export DATA=${DATAROOT}/${job}.${pid}
mkdir $DATA
cd $DATA 

####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-$COMROOT/logs/jlogfiles/jlogfile.${job}.${pid}}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

export cycle=t${cyc}z 

####################################
# SENDECF  - Flag Events on ECF
# SENDDBN  - Issue DBNet Client Calls
# SENDCOM  - Copy files to /com directory
# GET_IOPROFILE - Run I/O statistics
####################################
export SENDCOM=${SENDCOM:-YES}
export SENDECF=${SENDECF:-YES}
export SENDDBN=${SENDDBN:-YES}

export GET_IOPROFILE=NO

export HOMEgefs=${HOMEgefs:-$NWROOT/gefs.${gefs_ver}}
export GEMPAKgefs=${GEMPAKgefs:-$HOMEgefs/gempak}
export PARMgefs=${PARMgefs:-$HOMEgefs/parm}

#
# Set up model and cycle specific variables
#
export NET=gens
export RUN=gefs
export fend=384
export finc=6
export finc_0p50=3
export fstart=00
export model=ensemble
export GRIB=
export EXT=""
export DBN_ALERT_TYPE=GEFS_GEMPAK

#
# Now set up GEMPAK/NTRANS environment
#
. ${NWROOTp1}/gempak/.gempak


###################################
# Set up the UTILITIES
###################################
export utilscript=${NWROOTp1}/util/ush
export utilities=${NWROOTp1}/util/ush
export utilexec=${NWROOTp1}/util/exec

# Run setup to initialize working directory and utility scripts
sh $utilscript/setup.sh
# Run setpdy and initialize PDY variables
setpdy.sh
. PDY

export COM=${COMROOT}/${NET}/${envir}
# export COMIN=${COMROOT}/${NET}/${envir}/${RUN}.${PDY}/${cyc}/pgrba
export COMIN=${COM}/${RUN}.${PDY}/${cyc}/pgrb2a
export COMIN_P5=${COM}/${RUN}.${PDY}/${cyc}/pgrb2ap5
export COMIN_B=${COM}/${RUN}.${PDY}/${cyc}/pgrb2b
export COMIN_B_P5=${COM}/${RUN}.${PDY}/${cyc}/pgrb2bp5
export COMOUT=${COMROOT}/nawips/${envir}/${RUN}.${PDY}

if [ ! -f $COMOUT ] ; then
  mkdir -p -m 775 $COMOUT
fi
 
env

########################################################
# Execute the script.
for member in avg spr
do
  export member
  export RUN=ge${member}
  for resolution in 1p 0p50
  do

  if [ $GET_IOPROFILE = YES ]; then
     /usrx/local/mio/tools/bin/miostats -X0 \
    # JY  ${NWROOT}/scripts/exnawips.sh.ecf
     echo "$HOMEgefs/scripts/exnawips_gefs.sh.ecf $RUN $member $resolution" >> poescript
  else
     # JY ${NWROOT}/scripts/exnawips.sh.ecf
     echo "$HOMEgefs/scripts/exnawips_gefs.sh.ecf $RUN $member $resolution" >> poescript
  fi
  
  done
done
########################################################

cat poescript

chmod 775 $DATA/poescript
export MP_PGMMODEL=mpmd
export MP_CMDFILE=$DATA/poescript

## Execute the script.

mpirun.lsf

#cat $pgmout

##################################################
# save the profiling data captured from miostats
##################################################
if [ $GET_IOPROFILE = YES ]; then
    . ${COMROOT}/miostats/.set_IOprofile
fi

cd ${DATAROOT}
rm -rf $DATA

date

