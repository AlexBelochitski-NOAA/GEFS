#!/bin/bash

date
export PS4=' $SECONDS + '
set -x -e

# Set mpi serial command
export wavempexec=${wavempexec:-"mpirun -n"}
export wave_mpmd=${wave_mpmd:-"cfp"}

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=$$
export DATA=${DATA:-$DATAROOT/${job}.${pid}}
if [ ! -d $DATA ]
then
   mkdir $DATA
fi
cd $DATA

############################
# Set up cycle varaible
############################
export cycle=t${cyc}z

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gens}
export RUN=${RUN:-gefs}
export COMPONENTwave=${COMPONENTwave:-${RUN}wave}
#export NTHREADS=1

####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-${DATA}/jlogfile.${job}.${pid}}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

# Specify Execution Areas
export HOMEgefs=${HOMEgefs:-${NWROOT}/gefs.${gefs_ver}}
export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
export USHgefs=${USHgefs:-$HOMEgefs/ush}
export FIXgefs=${FIXgefs:-$HOMEgefs/fix/fix_gefs}
export PARMgefs=${PARMgefs:-$HOMEgefs/parm}

export EXECgfs=$HOMEgfs/exec
export USHgfs=$HOMEgfs/ush
export FIXgfs=$HOMEgfs/fix
export PARMgfs=$HOMEgfs/parm

# Path to HOME Directory
export EXECwave=${EXECwave:-$HOMEgefs/exec}
export FIXwave=${FIXwave:-$FIXgefs/fix_wave}
export USHwave=${USHwave:-$HOMEgfs/ush}
export EXECcode=${EXECcode:-$HOMEgfs/exec}

##############################
# Run setpdy and initialize PDY variables
##############################
setpdy.sh
. PDY

# Set COM Paths and GETGES environment
export COMINwave=${COMINwave:-${COMROOT:?}/${NET}/${envir}}
export COMOUTwave=${COMOUTwave:-${COMROOT:?}/${NET}/${envir}}
export COMIN=${COMIN:-${COMINwave}/${COMPONENTwave}.${PDY}/${cyc}}
export COMOUT=${COMOUT:-${COMOUTwave}/${COMPONENTwave}.${PDY}/${cyc}}

export COMINice=${COMINice:-${COMROOTp2}/omb/prod}
export COMINwnd=${COMINwnd:-${COMROOT}/gfs/prod}
export COMIN_WAV_CUR=${COMIN_WAV_CUR:-${COMROOTp2}/rtofs/prod}

#############################
# Source relevant config files
#############################
configs="gefs gefs_wave gefs_wave_gempak"
config_path=${PARMgefs:-$NWROOT/gfs.${gfs_ver}/parm/config}
for config in $configs; do
    . $config_path/$config.parm
    status=$?
    [[ $status -ne 0 ]] && exit $status
done


# Add default errchk = err_chk
export errchk=${errchk:-err_chk}

# Set resources to propagate NTASKS across cfp call
NTASKS=${NTASKS:-${npe_node_waveprep}}
export NTASKS=${NTASKS:?NTASKS required to be set}

export cyc=${cyc:-00}
export cycle=${cycle:-t${cyc}z} 

export pgmout=OUTPUT.$$

export MP_PULSE=0

mkdir -p $COMOUT/gridded
mkdir -p $COMOUT/station
mkdir -p $COMOUT/stats
mkdir -p $COMOUT/gempak
export DATAout=$COMOUT/gempak

export wavelog=${COMOUTwave}/wave.log

env | sort

# Set wave model ID tag to include member number 
# if ensemble; waveMEMB var empty in deterministic
# Set wave model ID tag to include member number
# if ensemble; waveMEMB var empty in deterministic
membTAG='p'
if [ "${waveMEMB}" == "00" ]; then membTAG='c'; fi
export membTAG
export WAV_MOD_TAG=${COMPONENTwave}${waveMEMB}

export CFP_VERBOSE=1

###################################
# Set up variables and execute script
###################################
nfile=$LSB_DJOB_NUMPROC

export DBN_ALERT_TYPE=WAVE_GEMPAK
export fstart=0
grids='global.0p25'
grdID=$grids
DATAgrid=${DATA}
echo "$HOMEwave/scripts/exwave_nawips.sh $COMPONENTwave $DATAout >gempak.out 2>&1" >> poescript
env

chmod 775 poescript

if [ $nfile -gt 1 ]
then
  export MP_PGMMODEL=mpmd
  export MP_CMDFILE=poescript
  mpirun -n $nfile cfp $MP_CMDFILE
  export err=$?; err_chk
else
  poescript
fi
err=$?
if [ $err -ne 0 ]; then
  msg="FATAL ERROR: ex-script of JWAVE_GEMPAK failed!"
else
  msg="$job completed normally!"
fi
postmsg "$jlogfile" "$msg"

# Remove temp directories
if [ "$KEEPDATA" != "YES" ]; then
  cd $DATAROOT
##  rm -rf $DATA
fi
date


