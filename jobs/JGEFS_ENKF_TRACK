#!/bin/ksh 

####################################
# 12/22/2014 Kate
#
####################################
echo `date` $0 `date -u` begin

set -xa
export PS4='$SECONDS + '
date
####################################

export gefsmachine=${gefsmachine:-wcoss}
export gefsmpexec=${gefsmpexec:-mpirun.lsf}

export APRUN=${gefsmpexec:-mpirun.lsf}


##
 if [[ $gefsmachine = zeus ]]; then
   export  APRUN="$gefsmpexec $basesource/nw$envir/exec/zeus-poe"
 fi

###########################################
# Run gefs_config to get input parameters
###########################################
if [ "$RUN_ENVIR" = dev ]   ### For Developers
then
# . $basesource/nw${envir}/versions/gefs.ver
  . $basesource/nw${envir}/parm/gefs_config
fi



# #############################################
# SETUP ENS INITIALIZATION PROCESSING VARIABLES
# #############################################

####################################
# obtain unique process id (pid) and make working directory
####################################
export pid=$$
export DATAROOT=${DATAROOT:-/tmpnwprd_p2}
export DATA=${DATA:-$DATAROOT/gefs_enkf_track_$PDY$cyc.$envir.save}

if [[ -d $DATA ]]; then
  rm -rf $DATA
fi
mkdir -p $DATA
cd $DATA
############################
# Set up cycle varaible
############################

export cycle=t${cyc}z
export cycle_fcst=t${cyc_fcst}z

echo cyc=$cyc cyc_fcst=$cyc_fcst
echo cycle=$cycle cycle_fcst=$cycle_fcst

if (( cyc == cyc_fcst )); then
  export cycsuffix=false
  export fcstlong=true
else
  export fcstlong=false
  export cycsuffix=true
fi

echo fcstlong=$fcstlong
echo cycsuffix=$cycsuffix

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gens}
export RUN=enstr
export MP_LABELIO=YES

####################################
# File To Log Msgs
####################################
 export jlogfile=${jlogfile:-$baselog/com/logs/jlogfile}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

####################################
# SAVEGES  - Copy Files From TMPDIR to $GESdir
# RMGES    - Clean Files in $GESdir
# SENDSMS  - Flag Events on SMS
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# RERUN    - Rerun posts from beginning (default no)
# VERBOSE  - Specify Verbose Output in global_postgp.sh
####################################
  export SENDCOM=${SENDCOM:-NO}
  export SENDECF=${SENDECF:-YES}
  export SENDDBN=${SENDDBN:-YES}
  export SENDDBN_NTC=${SENDDBN_NTC:-YES}

  export SENDSMS=${SENDSMS:-NO}

  export VERBOSE=${VERBOSE:-NO}
  export RERUN=${RERUN:-NO}


  # Specify Execution Areas
  export HOMEgefs=${HOMEgefs:-${NWROOT}/gefs.$gefs_ver}
  export HOMEgsm=${HOMEgsm:-${NWROOT}/gsm.${gsm_ver}}

  export EXECgsm=${EXECgsm:-$HOMEgsm/exec}
  export USHgsm=${USHgsm:-$HOMEgsm/ush}
  export FIXgsm=${FIXgsm:-$HOMEgsm/fix/fix_am}
  export PARMgsm=${PARMgsm:-$HOMEgsm/parm}


  export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
  export USHgefs=${USHgefs:-$HOMEgefs/ush}
  export UTILgefs=${UTILgefs:-$HOMEgefs/util}
  export FIXgefs=${FIXgefs:-$HOMEgefs/fix}
  export PARMgefs=${PARMgefs:-$HOMEgefs/parm}


export ERRSCRIPT=err_chk
export LOGSCRIPT=startmsg
export REDOUT='1>>'
export REDERR='2>'


##############################################
echo set parameters using gefs.parm
##############################################
. $PARMgefs/gefs.parm
. $PARMgefs/gefs_init.parm

echo
env | sort
echo

##############################
# Set up the UTILITIES
##############################
#export EXECutil=$HOMEutil/exec
#export USHutil=$HOMEutil/ush
#export utilscript=$USHutil

##############################
# Run setup to initialize working directory and utility scripts
##############################
#ksh $USHutil/setup.sh

##############################
# Run setpdy and initialize PDY variables
##############################
setpdy.sh
. PDY

##############################################
# for global_chgres.sh
##############################################
export SLMASK=/dev/null

##############################################
# Define COM directories
##############################################

 if [[ "$gfssource" = para ]]; then
    export GFSCOMIN=$COMROOT/gfs/para/gfs.$PDY 
    export ENKFCOMIN=$COMROOT/gfs/para/enkf. 
  elif [[ "$gfssource" = prod ]]; then
    export GFSCOMIN=$COMROOT/gfs/prod/gfs.$PDY 
    export ENKFCOMIN=$COMROOT/gfs/prod/enkf. 
  else
    export GFSCOMIN=$COMROOT/gfs/prod/gfs.$PDY
    export ENKFCOMIN=$COMROOT/gfs/prod/enkf. 
  fi

###
#export pdycycp=`/nwprod/util/exec/ndate -$fhrp $PDY$cyc`
export pdycycp=`$NDATE -$fhrp $PDY$cyc`
export pdyp=`echo $pdycycp|cut -c1-8`
export cycp=`echo $pdycycp|cut -c9-10`
echo pdycycp=$pdycycp pdyp=$pdyp cycp=$cycp
###

export COMOUT=$COMROOT/${NET}/${envir}/gefs.${PDY}
export COMP=$COMROOT/${NET}/${envir}/gefs.${pdyp}/$cycp

mkdir -m 775 -p $COMP
echo location of chgres script and executable
# Change Resolution script and executable
   export chgresush=$USHgsm/global_chgres.sh
   export CHGRESEXEC=$EXECgsm/global_chgres

echo chgresush=$chgresush
echo CHGRESEXEC=$CHGRESEXEC

echo location of sighdr executable
sighdrexec=$EXECgsm/global_sighdr

echo sighdrexec=$sighdrexec

   if [[ $gefsmachine = zeus ]]; then
export archsyndir=/scratch1/portfolios/NCEPDEV/ensemble/save/wx20dh/comzeus/com/arch/prod/syndat
export homesyndir=$basesource/nw$envir/util
   fi


##############################################
echo list environment before running script
##############################################

echo
env | sort
echo
$HOMEgefs/scripts/exgefs_enkf_track.sh.ecf

#############################################################

cat $pgmout

msg="JOB COMPLETED NORMALLY"
postmsg "$jlogfile" "$msg"
#Remove the Temporary working directory
##############################
if [[ $KEEPDATA != "YES" ]]; then
  cd $DATAROOT
  rm -rf $DATA
fi


echo `date` $0 `date -u` end

