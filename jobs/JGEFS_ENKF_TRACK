#!/bin/ksh 

####################################
# 12/22/2014 Kate
#
####################################
$SMSBIN/smsinit $LOADL_STEP_ID 
echo `date` $0 `date -u` begin

set -xa
####################################

# 01/28/2013 New variables added for WCOSS and cross-machine unfication
export gefsmachine=${gefsmachine:-wcoss}
export gefsmpexec=${gefsmpexec:-mpirun.lsf}

###########################################
# Run gefs_config to get input parameters
###########################################
#DHOU 03/09/2012 temporal setting
#RERUN=YES
if [ "$RUN_ENVIR" = dev ]   ### For Developers
then
################# lines between these markers have been modified for dev begin
# echo $jobscript =jobscript #DHOU 03/07/2012
  . $basesource/nwdev/parm/gefs_config
else
   VERSION_FILE=/nw{$envir}/versions/gefs.ver
   if [-f $VERSION_FILE]; then
    . $VERSION_FILE
   else
    ecflow_client --abort
    exit
   fi
fi

export HOMEgefs=${HOMEgefs}
export HOMEgsm=${HOMEgsm}
export HOMEutil=${HOMEutil:-/nwprod/util}


# #############################################
# SETUP ENS INITIALIZATION PROCESSING VARIABLES
# #############################################
export PS4='$SECONDS + '

####################################
# obtain unique process id (pid) and make working directory
####################################
export pid=$$
if [ "$RUN_ENVIR" = dev ]    ### For Developers
then
  export DATA_IN=${DATA_IN:-$basetmp/tmpnwprd}
else
  export DATA_IN=/tmpnwprd
fi
export DATA=$DATA_IN/gefs_enkf_track_$PDY$cyc.$envir.save

if [[ -d $DATA ]]; then
  rm -rf $DATA
fi
mkdir -p $DATA
cd $DATA
############################
# Set up cycle varaible
############################

export cycle=t${cyc}z
export cycle_fcst=t${cyc_fcst}z

echo cyc=$cyc cyc_fcst=$cyc_fcst
echo cycle=$cycle cycle_fcst=$cycle_fcst

if (( cyc == cyc_fcst )); then
  export cycsuffix=false
  export fcstlong=true
else
  export fcstlong=false
  export cycsuffix=true
fi

echo fcstlong=$fcstlong
echo cycsuffix=$cycsuffix

####################################
# Specify NET and RUN Name and model
####################################
export NET=gens
export RUN=enstr

####################################
# File To Log Msgs
####################################
if [ "$RUN_ENVIR" = dev ]     ### For Developers
then
  export jlogfile=${jlogfile:-$baselog/com/logs/jlogfile}
else
  export jlogfile=/com/logs/para/jlogfile
fi

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

####################################
# SAVEGES  - Copy Files From TMPDIR to $GESdir
# RMGES    - Clean Files in $GESdir
# SENDSMS  - Flag Events on SMS
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# RERUN    - Rerun posts from beginning (default no)
# VERBOSE  - Specify Verbose Output in global_postgp.sh
####################################
if [ "$RUN_ENVIR" = dev ]         ### For Developers
then
  export SENDCOM=${SENDCOM:-YES}
  export SENDSMS=${SENDSMS:-YES}
  export VERBOSE=${VERBOSE:-NO}
  export RERUN=${RERUN:-NO}

  # Specify Execution Areas
  export HOMEgsm=${HOMEgsm:-/nw${envir}}
  export EXECgsm=${EXECgsm:-$HOMEgsm/exec}
  export USHgsm=${USHgsm:-$HOMEgsm/ush}
  export FIXgsm=${FIXgsm:-$HOMEgsm/fix}

# THese GLOBAL env varaibles will be used in ecf and ush scripts
# Those scripts could be modified later to remove these GLOBAL cwvariables
  export EXECGLOBAL=${EXECgsm:-$HOMEgsm/exec}
  export USHGLOBAL=${USHgsm:-$HOMEgsm/ush}
  export FIXGLOBAL=${FIXgsm:-$HOMEgsm/fix/fix_am}

  export HOMEgefs=${HOMEgefs:-/nw${envir}}
  export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
  export USHgefs=${USHgefs:-$HOMEgefs/ush}
  export FIXgefs=${FIXgefs:-$HOMEgefs/fix}
  export PARMgefs=${PARMgefs:-$HOMEgefs/parm}

else                             ### For Operations
  export SENDCOM=YES
  export SENDSMS=YES
  export VERBOSE=NO
  export RERUN=NO

  # Specify Execution Areas
  export HOMEGSM=/nw${envir}
  export EXECGSM=$HOMEGSM/exec
  export USHGSM=$HOMEGSM/ush
  export FIXGSM=$HOMEGSM/fix/fix_am
  export PARMGSM=$HOMEGSM/parm

  export HOMEGLOBAL=/nwprod
  export EXECGLOBAL=$HOMEGSM/exec
  export USHGLOBAL=$HOMEGSM/ush
  export FIXGLOBAL=$HOMEGSM/fix/fix_am
  export PARMGLOBAL=$HOMEGSM/parm

  export HOMEGEFS=/nw${envir}
  export EXECGEFS=$HOMEGEFS/exec
  export USHGEFS=$HOMEGEFS/ush
  export FIXGEFS=$HOMEGEFS/fix
  export PARMGEFS=$HOMEGEFS/parm
fi


export ERRSCRIPT=err_chk
export LOGSCRIPT=startmsg
export REDOUT='1>>'
export REDERR='2>'


##############################################
echo set parameters using gefs.parm
##############################################
. $PARMgefs/gefs.parm
. $PARMgefs/gefs_init.parm

echo
env | sort
echo

##############################
# Set up the UTILITIES
##############################
export EXECutil=$HOMEutil/exec
export USHutil=$HOMEutil/ush
export utilscript=$USHutil

##############################
# Run setup to initialize working directory and utility scripts
##############################
ksh $utilscript/setup.sh

##############################
# Run setpdy and initialize PDY variables
##############################
sh $utilscript/setpdy.sh
. PDY

##############################################
# for global_chgres.sh
##############################################
export SLMASK=/dev/null

##############################################
# Define COM directories
##############################################
if [ "$RUN_ENVIR" = dev ]         ### For Developers
then

 if [[ "$gfssource" = para ]]; then
    export GFSCOMIN=$TMPCOM/gfs/para/gfs.$PDY 
    export ENKFCOMIN=$TMPCOM/gfs/para/enkf. 
  elif [[ "$gfssource" = prod ]]; then
    export GFSCOMIN=$TMPCOM/gfs/prod/gfs.$PDY 
    export ENKFCOMIN=$TMPCOM/gfs/prod/enkf. 
  else
    export GFSCOMIN=/com/gfs/prod/gfs.$PDY
    export ENKFCOMIN=/com/gfs/prod/enkf. 
  fi
else
  if [[ "$gfssource" = para ]]; then
    export GFSCOMIN=/com/gfs/para/gfs.$PDY
    export ENKFCOMIN=/com/gfs/para/enkf. 
  elif [[ "$gfssource" = prod ]]; then
    export GFSCOMIN=/com/gfs/prod/gfs.$PDY
    export ENKFCOMIN=/com/gfs/prod/enkf. 
  else
    export GFSCOMIN=$baseptmp/com/gfs/${envir}/gfs.$PDY
    export GFSCOMIN=$baseptmp/com/gfs/${envir}/gfs.$PDY
   fi
fi

###
#export pdycycp=`/nwprod/util/exec/ndate -$fhrp $PDY$cyc`
export pdycycp=`$EXECutil/ndate -$fhrp $PDY$cyc`
export pdyp=`echo $pdycycp|cut -c1-8`
export cycp=`echo $pdycycp|cut -c9-10`
echo pdycycp=$pdycycp pdyp=$pdyp cycp=$cycp
###
if [ "$RUN_ENVIR" = dev ]         ### For Developers
then

export COMOUT=$baseoutput/com/${NET}/${envir}/gefs.${PDY}
export COMP=$baseoutput/com/${NET}/${envir}/gefs.${pdyp}/$cycp
else
export COMOUT=/com/${NET}/${envir}/gefs.${PDY}
export COMP=/com/${NET}/${envir}/gefs.${pdyp}/$cycp
fi

mkdir -m 775 -p $COMP
echo location of chgres script and executable
# Change Resolution script and executable
   export chgresush=$USHgsm/global_chgres.sh
   export CHGRESEXEC=$EXECgsm/global_chgres

echo chgresush=$chgresush
echo CHGRESEXEC=$CHGRESEXEC

echo location of sighdr executable
sighdrexec=$EXECgsm/global_sighdr

echo sighdrexec=$sighdrexec

if [ "$RUN_ENVIR" = dev ]         ### For Developers
then 
   if [[ $gefsmachine = zeus ]]; then
export archsyndir=/scratch1/portfolios/NCEPDEV/ensemble/save/wx20dh/comzeus/com/arch/prod/syndat
export homesyndir=$basesource/nw$envir/util
   fi
 fi

##
 if [[ $gefsmachine = zeus ]]; then
   export  gefspoe="$gefsmpexec $basesource/nw$envir/exec/zeus-poe"
 else
     export gefspoe=$gefsmpexec
 fi

##############################################
echo list environment before running script
##############################################

echo
env | sort
echo
$HOMEgefs/scripts/exgefs_enkf_track.sh.ecf

#############################################################

cat $pgmout

msg="JOB COMPLETED NORMALLY"
postmsg "$jlogfile" "$msg"
#Remove the Temporary working directory
##############################
cd $DATA_IN
rm -rf $DATA

echo `date` $0 `date -u` end
$SMSBIN/endt

