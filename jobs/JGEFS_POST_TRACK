#!/bin/ksh 
#####################################################################
# 1/7/2014, Jiayi Peng and Dingchen Hou   Scripts are modified to be vertical structure 
####################################################################

#$SMSBIN/smsinit $LOADL_STEP_ID 
echo `date` $0 `date -u` begin

set -xa
####################################

# 01/28/2013 New variables added for WCOSS and cross-machine unfication
export gefsmachine=${gefsmachine:-wcoss}
export gefsmpexec=${gefsmpexec:-mpirun.lsf}
export machine=${gefsmachine:-wcoss}
export APRUN=${gefsmpexec:-mpirun.lsf}

###########################################
# Run gefs_config to get input parameters
###########################################
if [ "$RUN_ENVIR" = dev ]   ### For Developers
then
# . $basesource/nw${envir}/versions/gefs.ver
  . $basesource/nw${envir}/parm/gefs_config
else
  VERSION_FILE=/nw{$envir}/versions/gefs.ver
  if [-f $VERSION_FILE]; then
   . $VERSION_FILE
  else
   ecflow_client --abort
   exit
  fi
fi

export HOMEgefs=${HOMEgefs}
export HOMEtrak=${HOMEtrak}
export HOMEutil=${UTILROOT:-/nwprod2/util}
export HOMEgrib=${GRIBROOT:-/nwprod2/util}

# #### 05/05/99 ###############################
# SETUP ENS POST PROCESSING VARIABLES
# #############################################
na=`basename $0`
export PS4=' + $SECONDS $na $LINENO: '
date

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=$$
export DATA=$DATAROOT/${job}.${pid}

mkdir -p $DATA
cd $DATA

############################
# Set up cycle varaible
############################
export cycle=t${cyc}z
export cycle_fcst=t${cyc_fcst}z

echo cyc=$cyc cyc_fcst=$cyc_fcst
echo cycle=$cycle cycle_fcst=$cycle_fcst

if (( cyc == cyc_fcst )); then
  export fcstlong=true
  export cfsuffix=""
  export cycsuffix=false
else
  export fcstlong=false
  export cfsuffix=".cycfs$cyc_fcst"
  export cycsuffix=true
fi

export fcstlong
echo fcstlong=$fcstlong

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gens}
export RUN=gefs

####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-/com/logs/jlogfile}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

####################################
# SENDSMS  - Flag Events on SMS
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
####################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-NO}
export SENDSMS=${SENDSMS:-YES}
export SENDECF=${SENDECF:-YES}

####################################
# Specify Execution Areas
####################################
export EXECens_tracker=${EXECtrak:-$HOMEtrak/exec}
export USHens_tracker=${USHtrak:-$HOMEtrak/ush}
export FIXens_tracker=${FIXtrak:-$HOMEtrak/fix}
export PARMgefs=$HOMEgefs/parm

##############################
# Set up the UTILITIES
##############################
export EXECutil=$HOMEutil/exec
export USHutil=$HOMEutil/ush

##############################
# Run setup to initialize working directory and utility scripts
##############################
ksh $USHutil/setup.sh

##############################
# Run setpdy and initialize PDY variables
##############################
sh $USHutil/setpdy.sh
. PDY

##############################################
# Define COM directories
##############################################
export COMIN=$COMROOT/com/${NET}/${envir}/gefs.${PDY}
export COMOUT=$COMROOT/com/${NET}/${envir}/gefs.${PDY}

export ensdir=$COMIN/$cyc/pgrb2ap5
export ensdirb=$COMIN/$cyc/pgrb2bp5
#export ensdir=/ensemble/noscrub/GEFS.2015/PGRB2/tfGb_20130912/pgrb2ap5
export COM=$COMOUT/$cyc/track
mkdir -m 775 -p $COM

##############################################
echo set parameters using gefs.parm
##############################################
. $PARMgefs/gefs.parm

if [[ $envir = dev ]]; then
  export fhmax=$fhmax00
  elif (( cyc == 06 )); then
  export fhmax=$fhmax06
  elif (( cyc == 12 )); then
  export fhmax=$fhmax12
  elif (( cyc == 18 )); then
  export fhmax=$fhmax18
fi

####################################
# Create member list
####################################

if [[ $fcstlong = true ]]; then
  memberlist="c00"
else
  memberlist=""
fi

(( imem = 0 ))
while (( imem < npair * 2 ))
do
  (( imem = imem + 1 ))
  if (( imem < 10 )); then
    imem=0$imem
  fi
  memberlist="$memberlist p$imem"
done
echo memberlist=$memberlist

#export homesyndir=$basesource/nw$envir/util
export homesyndir=$HOMEtrak

#DHOU 01/24/2013, Temprary for WCOSS transition
# if [[ $envir = dev ]]; then
#  if [[ $gefsmachine = wcoss ]]; then
#export archsyndir=$TMPCOM/arch/prod/syndat
#  fi
#  if [[ $gefsmachine = zeus ]]; then
#export archsyndir=/scratch1/portfolios/NCEPDEV/ensemble/save/wx20dh/comzeus/com/arch/prod/syndat
#export homesyndir=$basesource/nw$envir/util
#  fi
# fi

echo
env | sort
echo

########################################################
# Execute the tracking script.
export cmodel=ens
export loopnum=1
export ymdh=${PDY}${cyc}

export exectrkdir=${EXECens_tracker}
export rundir=${FIXens_tracker}

export CYL=${cyc}

mkdir ${DATA}/${cmodel}
cd ${DATA}/${cmodel}

>trkr.cmdfile
for pert in ${memberlist}; do
    pertdir=${DATA}/${cmodel}/${pert}
    if [ ! -d ${pertdir} ]; then 
     mkdir -p ${pertdir}
    fi
    outfile=${pertdir}/trkr.${cmodel}.${pert}.${ymdh}.out
    echo "${USHens_tracker}/extrkr_g2.sh ${loopnum} ${cmodel} ${ymdh} ${pert} ${pertdir} 2>&1 >${outfile}" >>trkr.cmdfile
done
 
cat trkr.cmdfile
chmod 775 trkr.cmdfile
export MP_PGMMODEL=mpmd
export MP_CMDFILE=${DATA}/${cmodel}/trkr.cmdfile

#mpirun.lsf
$APRUN

for pert in ${memberlist}; do
  pertdir=${DATA}/${cmodel}/${pert}
  cp ${pertdir}/trak.a${pert}.atcfunix.${PDY}${CYL} ${COM}/a${pert}.t${CYL}z.cyclone.trackatcfunix
done
rm -rf ${DATA}/*

sh ${USHens_tracker}/ens_trak_ave.sh
cp ${DATA}/aemn.trkprob.* ${COM}
cp ${DATA}/trak.aemn.atcfunix.* ${COM}/aemn.t${CYL}z.cyclone.trackatcfunix
cp ${DATA}/trak.aemn.mode.* ${COM}/aemn.t${CYL}z.cyclone.trackmode
cp ${DATA}/trak.aemn.spread.* ${COM}/aemn.t${CYL}z.cyclone.trackspread
rm -rf ${DATA}/*

cd ${DATA}
export COMOUT1=${COM}
export COMOUT2=${COM}
${USHens_tracker}/atcf_2_cxml.sh ${cmodel} ${ymdh} ${DATA}

################################
 msg="JOB COMPLETED NORMALLY"
 postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
if [[ $envir = prod ]] || \
   [[ $envir = para ]] || \
   [[ $envir = test ]]; then
  cd $DATAROOT
  rm -rf $DATA
else
  echo skip cleanup for testing
fi

 date

if [[ $envir = prod ]] || \
   [[ $envir = para ]] || \
   [[ $envir = test ]]; then
  $SMSBIN/endt
else
  echo skip endt for testing
fi
