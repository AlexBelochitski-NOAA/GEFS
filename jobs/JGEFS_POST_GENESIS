#!/bin/ksh 
#####################################################################
# 1/12/2015, Creadted by Jiayi Peng foolowing JGEFS_POST_TRACK,  Scripts in vertical structure 
####################################################################

#$SMSBIN/smsinit $LOADL_STEP_ID 
echo `date` $0 `date -u` begin

set -xa
####################################

# 01/28/2013 New variables added for WCOSS and cross-machine unfication
export gefsmachine=${gefsmachine:-wcoss}
export gefsmpexec=${gefsmpexec:-mpirun.lsf}
export machine=${gefsmachine:-wcoss}
export APRUN=${gefsmpexec:-mpirun.lsf}

###########################################
# Run gefs_config to get input parameters
###########################################
if [ "$RUN_ENVIR" = dev ]   ### For Developers
then
# . $basesource/nw${envir}/versions/gefs.ver
  . $basesource/nw${envir}/parm/gefs_config
else
  VERSION_FILE=/nw{$envir}/versions/gefs.ver
  if [-f $VERSION_FILE]; then
   . $VERSION_FILE
  else
   ecflow_client --abort
   exit
  fi
fi

export HOMEgefs=${HOMEGgefs}
export HOMEtrak=${HOMEtrak}
export HOMEgene=${HOMEgene}
export HOMEutil=${HOMEutil:-/nwprod/util}

# #### 05/05/99 ###############################
# SETUP ENS POST PROCESSING VARIABLES
# #############################################
na=`basename $0`
export PS4=' + $SECONDS $na $LINENO: '
date

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=$$
if [ "$RUN_ENVIR" = dev ]    ### For Developers
then
   export DATA_IN=${DATA_IN:-$basetmp/tmpnwprd}
else                         ### For Operations
   export DATA_IN=/tmpnwprd
fi
export DATA=$DATA_IN/${job}.${pid}

mkdir -p $DATA
cd $DATA

############################
# Set up cycle varaible
############################
export cycle=t${cyc}z
export cycle_fcst=t${cyc_fcst}z

echo cyc=$cyc cyc_fcst=$cyc_fcst
echo cycle=$cycle cycle_fcst=$cycle_fcst

if (( cyc == cyc_fcst )); then
  export fcstlong=true
  export cfsuffix=""
  export cycsuffix=false
else
  export fcstlong=false
  export cfsuffix=".cycfs$cyc_fcst"
  export cycsuffix=true
fi

export fcstlong
echo fcstlong=$fcstlong

####################################
# Specify NET and RUN Name and model
####################################
export NET=gens

####################################
# File To Log Msgs
####################################
if [ "$RUN_ENVIR" = dev ]     ### For Developers
then
   export jlogfile=${jlogfile:-$baselog/com/logs/jlogfile}
else                        ### For Operations
   export jlogfile=/com/logs/jlogfile
fi

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

####################################
# SENDSMS  - Flag Events on SMS
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
####################################
export SENDECF=NO
export SENDCOM=NO
if [ "$RUN_ENVIR" = dev ]         ### For Developers
then
 export SENDDBN=NO
else                              ## For production
 export SENDDBN=YES
fi

####################################
# Specify Execution Areas
####################################
if [ "$RUN_ENVIR" = dev ]         ### For Developers
then
  export HOMEgene=${HOMEGENE:-/nw${envir}}
  export EXECens_genesis=${EXECgene:-$HOMEGENE/exec}
  export USHens_genesis=${USHgene:-$HOMEGENE/ush}
  export FIXens_genesis=${FIXgene:-$HOMEGENE/fix}
  export PARMgefs=$HOMEgefs/parm
else  
  export HOMEgene=${HOMEGENE:-/nw${envir}}
  export EXECens_genesis=$HOMEgene/exec
  export USHens_genesis=$HOMEgene/ush
  export FIXens_genesis=$HOMEgene/fix/fix_am
  export HOMEgefs=${HOMEgefs:-/nw${envir}}
  export PARMgefs=$HOMEgefs/parm
fi

##############################
# Set up the UTILITIES
##############################
export USHutil=$HOMEutil/ush
export EXECutil=$HOMEutil/exec
export utilscript=$USHutil
export GRBINDEX=EXECutil/grbindex}

##############################
# Run setup to initialize working directory and utility scripts
##############################
ksh $utilscript/setup.sh

##############################
# Run setpdy and initialize PDY variables
##############################
sh $utilscript/setpdy.sh
. PDY

##############################################
# Define GENVITDIR directory. The PATH do be determined
##############################################
export JYYYY=`echo ${PDY} | cut -c1-4`
if [ "$RUN_ENVIR" = dev ]         ### For Developers
  export genvitdir=$baseoutput/com/${NET}/${envir}/genesis_vital_${JYYYY}
else                              ### For Operations
  export genvitdir=/com/${NET}/${envir}/genesis_vital_${JYYYY}
fi
mkdir -p ${genvitdir}

##############################################
# Define COM directories
##############################################
if [ "$RUN_ENVIR" = dev ]         ### For Developers
then
  export COMIN=$baseoutput/com/${NET}/${envir}/gefs.${PDY}
  export COMOUT=$baseoutput/com/${NET}/${envir}/gefs.${PDY}
else                              ### For Operations
  export COMIN=/com/${NET}/${envir}/${RUN}.${PDY}
  export COMOUT=/com/${NET}/${envir}/${RUN}.${PDY}
fi
export ensdir=$COMIN/$cyc/pgrb2ap5
#export ensdir=/ensemble/noscrub/GEFS.2015/PGRB2/tfGb_20130912/pgrb2ap5
export COM=$COMOUT/$cyc/genesis
mkdir -m 775 -p $COM

##############################################
echo set parameters using gefs.parm
##############################################
. $PARMgefs/gefs.parm

if [[ $envir = dev ]]; then
  if (( cyc == 00 )); then
  export fhmax=$fhmax00
  elif (( cyc == 06 )); then
  export fhmax=$fhmax06
  elif (( cyc == 12 )); then
  export fhmax=$fhmax12
  elif (( cyc == 18 )); then
  export fhmax=$fhmax18
  fi
fi

####################################
# Create member list
####################################

if [[ $fcstlong = true ]]; then
  memberlist="c00"
else
  memberlist=""
fi

(( imem = 0 ))
while (( imem < npair * 2 ))
do
  (( imem = imem + 1 ))
  if (( imem < 10 )); then
    imem=0$imem
  fi
  memberlist="$memberlist p$imem"
done
echo memberlist=$memberlist

#export homesyndir=$basesource/nw$envir/util
export homesyndir=$HOMEgene

#DHOU 01/24/2013, Temprary for WCOSS transition
# if [[ $envir = dev ]]; then
#  if [[ $gefsmachine = wcoss ]]; then
#export archsyndir=$TMPCOM/arch/prod/syndat
#  fi
#  if [[ $gefsmachine = zeus ]]; then
#export archsyndir=/scratch1/portfolios/NCEPDEV/ensemble/save/wx20dh/comzeus/com/arch/prod/syndat
#export homesyndir=$basesource/nw$envir/util
#  fi
# fi

echo
env | sort
echo

########################################################
# Execute the genesis script.
export cmodel=ens
export loopnum=1
export ymdh=${PDY}${cyc}

export exectrkdir=${EXECens_genesis}
export rundir=${FIXens_genesis}

export CYL=${cyc}

export trkrtype=tcgen
export trkrebd=350.0
export trkrwbd=105.0
export trkrnbd=30.0
export trkrsbd=5.0
export mslpthresh=0.0015
export v850thresh=1.5000
export regtype=altg

mkdir ${DATA}/${cmodel}
cd ${DATA}/${cmodel}

>trkr.cmdfile
for pert in ${memberlist}; do
    pertdir=${DATA}/${cmodel}/${pert}
    if [ ! -d ${pertdir} ]; then 
     mkdir -p ${pertdir}
    fi
    outfile=${pertdir}/trkr.${regtype}.${cmodel}.${pert}.${ymdh}.out
    echo "${USHens_genesis}/extrkr_gen_g2.sh ${loopnum} ${cmodel} ${ymdh} ${pert} ${pertdir} 2>&1 >${outfile}" >>trkr.cmdfile
done
 
cat trkr.cmdfile
chmod 775 trkr.cmdfile
export MP_PGMMODEL=mpmd
export MP_CMDFILE=${DATA}/${cmodel}/trkr.cmdfile

#mpirun.lsf
$APRUN

for pert in ${memberlist}; do
  export TRKDATA=${DATA}/${cmodel}/${pert}
  export pertdir=${DATA}/${cmodel}/${pert}
  export atcfout="a${pert}"
# pert_posneg=` echo "${pert}" | cut -c1-1`
# pert_num=`    echo "${pert}" | cut -c2-3`
# export atcfout="a${pert_posneg}${pert_num}"
  ${USHens_genesis}/sort_tracks.gen.sh  >${pertdir}/sort.${regtype}.${atcfout}.${ymdh}.out
  cp ${pertdir}/trak.a*.atcfunix.altg.${ymdh} ${COM}/.
  cp ${pertdir}/storms.a*.atcf_gen.altg.${ymdh} ${COM}/.
done
rm -rf ${DATA}/*

for pert in ${memberlist}; do
  cd ${DATA}
  cp ${COM}/storms.a${pert}.atcf_gen.altg.${ymdh} .

  infile=storms.a${pert}.atcf_gen.altg.${ymdh}
  outf42=storms.a${pert}.atcf_gen.${ymdh}
  outf43=trak.a${pert}.atcfunix.${ymdh}
  ln -s -f ${infile} fort.41
  ln -s -f ${outf42} fort.42
  ln -s -f ${outf43} fort.43
  ${EXECens_genesis}/filter_gen_gfs
  cp storms.a${pert}.atcf_gen.${ymdh} ${COM}/.
  cp trak.a${pert}.atcfunix.${ymdh} ${COM}/.
  rm -rf ${DATA}/*
done

##### ensemble mean calculation ##########################
${USHens_genesis}/ens_trak_ave_2d.sh
cp ${DATA}/trak.aemn.* ${COM}/.
cp ${DATA}/aemn.trkprob.* ${COM}/.
rm -f ${DATA}/*

#export DATA=${DATA}/5d
#mkdir -p ${DATA}
mkdir -p ${COM}/5d
${USHens_genesis}/ens_trak_ave_5d.sh
cp ${DATA}/trak.aemn.* ${COM}/5d
cp ${DATA}/aemn.trkprob.* ${COM}/5d
rm -f ${DATA}/*

################################
 msg="JOB COMPLETED NORMALLY"
 postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
if [[ $envir = prod ]] || \
   [[ $envir = para ]] || \
   [[ $envir = test ]]; then
  cd /tmpnwprd
  rm -rf $DATA
else
  echo skip cleanup for testing
fi

 date

if [[ $envir = prod ]] || \
   [[ $envir = para ]] || \
   [[ $envir = test ]]; then
  $SMSBIN/endt
else
  echo skip endt for testing
fi
