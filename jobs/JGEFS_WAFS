#!/bin/ksh 

echo `date` $0 `date -u` begin

set -xa
export PS4='$SECONDS + '
date -u

###########################################
## Run gefs_config_dev to get input parameters
############################################
if [ "$RUN_ENVIR" = dev ]      ### For Developers
then
# . $basesource/nw${envir}/versions/gefs.ver
  . $basesource/nwdev/parm/gefs_config_dev
    export gefsmpexec=${gefsmpexec:-mpirun.lsf}
fi

export APRUN=${gefsmpexec:-mpirun.lsf}

####################################
##  Load the GRIB Utilities module
#####################################
. /usrx/local/Modules/default/init/ksh
module load grib_util/v1.0.1
export CNVGRIB=$CNVGRIB21_GFS
module load util_shared/v1.0.2
####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=$$
export DATA=${DATA:-${DATAROOT}/${job}.${pid}}

mkdir -p $DATA
cd $DATA

####################################
# Set up the UTILITIES and load prod
# and grib utility modules
####################################
#module load prod_util/v1.0.1
#module load grib_util/v1.0.1
#module load util_shared/v1.0.0

######################################
# Set up the cycle variable
######################################
export cycle=${cycle:-t${cyc}z}

###########################################
# Run setpdy and initialize PDY variables
###########################################
setpdy.sh
. PDY

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gens}
export RUN=${RUN:-gefs}

####################################
# File To Log Msgs
####################################
#export COMROOT=${COMROOT:-/com}
export jlogfile=${jlogfile:-${COMROOT}/logs/jlogfiles/jlogfile.${job}.${pid}}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

############################################
# SENDCOM=YES--Copy output file to /com
# SENDECF=YES--Allow to talk back to ECF
# SENDDBN=YES--Alert output file to TOC
############################################
#export NWROOT=${NWROOT:-/nw${envir}}
#export PCOMROOT=${PCOMROOT:-/pcom/${envir}}
#export SENDDBN=${SENDDBN:-YES}
#export SENDDBN_NTC=${SENDDBN_NTC:-YES}
#export SENDECF=${SENDECF:-YES}
#export SENDCOM=${SENDCOM:-YES}

#export DBNROOT=${DBNROOT:-/iodprod/dbnet_siphon}
#export KEEPDATA=${KEEPDATA:-NO}

####################################
# Specify Execution Areas
####################################
export HOMEgefs=${HOMEgefs:-${NWROOT}/gefs.${gefs_ver}}

export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
export USHgefs=${USHgefs:-$HOMEgefs/ush}
export UTILgefs=${UTILgefs:-$HOMEgefs/util/exec}
export FIXgefs=${FIXgefs:-$HOMEgefs/fix}
export PARMgefs=${PARMgefs:-$HOMEgefs/parm}

#export utilexec=${utilexec:-/nwprod2/util/exec}

##############################################
# Define COM directories
##############################################
export COMIN=${COMIN:-${COMROOT}/${NET}/${envir}/${RUN}.${PDY}/${cyc}}
export COMINm1=${COMINm1:-${COMROOT}/${NET}/${envir}/${RUN}.${PDYm1}/${cyc}}
export COMOUT=${COMOUT:-${COMROOT}/${NET}/${envir}/${RUN}.${PDY}/${cyc}/wafs}
export PCOM=${PCOM:-${PCOMROOT}/${RUN}}

mkdir -m 775 -p $PCOM
mkdir -m 775 -p $COMOUT

msg="HAS BEGUN on `hostname`"
postmsg "$jlogfile" "$msg"

# Execute the ex-script

$HOMEgefs/scripts/exgefs_wafs.sh.ecf
export err=?; err_chk

msg="JOB $job HAS COMPLETED NORMALLY"
postmsg "$jlogfile" "$msg"

###################################
# Print exec output
###################################
if [ -e "$pgmout" ]; then
cat $pgmout
fi

###################################
# Remove temp directories
###################################
if [ "$KEEPDATA" != "YES" ] ; then
  cd $DATAROOT
  rm -rf $DATA
fi

date
