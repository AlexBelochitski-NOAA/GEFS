#!/bin/sh

echo `date` $0 `date -u` begin

set -xa
export PS4='$SECONDS + '
date

export APRUN=${gefsmpexec:-mpirun.lsf}
export RUNMEM=$RUNMEM
export mem=`echo $RUNMEM|cut -c 3-`
############################
# Set up cycle varaible
############################

export cycle=t${cyc}z
export cycle_fcst=t${cyc_fcst}z

if (( cyc == cyc_fcst )); then
        export cycsuffix=false
        export fcstlong=true
else
        export fcstlong=false
        export cycsuffix=true
fi # (( cyc == cyc_fcst ))

####################################
# obtain unique process id (pid) and identify working directory
####################################
export pid=$$
export DATA=${DATA:-$DATAROOT/${job}.${pid}}
mkdir -p $DATA
cd $DATA
#export DATA=$DATAROOT/gefs_fv3chgrs_$PDY$cyc.$envir.save/$mem

##############################
# Run setpdy and initialize PDY variables
##############################
setpdy.sh
. PDY


####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gens}
export RUN=${RUN:-gefs}

####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-$COMROOT/logs/jlogfiles/jlogfile.${job}.${pid}}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

####################################
# Specify Execution Areas
####################################
export HOMEgefs=${HOMEgefs:-$NWROOT/gefs.${gefs_ver}}
export HOMEgsm=${HOMEgsm:-$NWROOT/gsm.${gsm_ver}}

export EXECgsm=${EXECgsm:-$HOMEgsm/exec}
export USHgsm=${USHgsm:-$HOMEgsm/ush}
export FIXgsm=${FIXgsm:-$HOMEgsm/fix/fix_am}
export PARMgsm=${PARMgsm:-$HOMEgsm/parm}

export FIXGLOBAL=$FIXgsm

export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
export USHgefs=${USHgefs:-$HOMEgefs/ush}
export FIXgefs=${FIXgefs:-$HOMEgefs/fix}
export PARMgefs=${PARMgefs:-$HOMEgefs/parm}


##############################################
echo set parameters using gefs.parm
##############################################

. $PARMgefs/gefs.parm
. $PARMgefs/gefs_init.parm

(( LEVS=LEVSHR+1 ))
export LEVS=$LEVS
export CASE=$CASEHR
env | sort
##############################################
# for global_chgres.sh
##############################################
#export SLMASK=/dev/null

##############################################
# Define COM directories
##############################################
export COM_IN=${COM_IN:-${COMROOT}/${NET}/${envir}}
export COM_OUT=${COM_OUT:-${COMROOT}/${NET}/${envir}}
export COMIN=${COMIN:-${COM_IN}/${RUN}.${PDY}}
export COMOUT=${COMOUT:-${COM_OUT}/${RUN}.${PDY}}

##############################################
# Define GES directories
##############################################
export GESOUT=${GESOUT:-$GESROOT/${envir}}
export GESOUT=$GESOUT/gefs.${PDY}
export FV3GESOUT=$GESOUT/${cyc}/$mem/${CASE}_$PDY$cyc
mkdir -p $FV3GESOUT
#export FV3GESOUT=$GESROOT/${envir}/fv3gefs.${PDY}
##############################################
echo list environment before running script
##############################################

env | sort

#--------------------------------------------------------------------------------

. $MODULESHOME/init/sh  2>>/dev/null
module load prod_util hpss >>/dev/null
#export workflow_ver=v15.0.0
export BASE_SVN=$HOMEDIR1/fv3gfs
export BASE_GSM=$HOMEgsm
export HOMEgfs=$HOMEgsm
#export CASE=$CASEHR
#-- create ICs using operational GFS initial conditions

#--start from operational GFS initial conditions

set -eux
#-------------------------------------------------------------------------------------------------

echo `date` $0 begin

set -x
export INIDIR=$DATA
export CDATE=$PDY$cyc
#export OUTDIR=$FV3GESOUT/$mem/${CASE}_$CDATE
export OUTDIR=$FV3GESOUT
export ictype=nemsgfs
if [ $inflag = 7 ] ; then
	if [ $mem = "c00" ] ; then
		cp $GESOUT/ge$mem.t$cyc\z.atmanl $INIDIR/gfnanl.gfs.$PDY$cyc
	else
		cp $GESOUT/ge$mem.t$cyc\z.ratmanl $INIDIR/gfnanl.gfs.$PDY$cyc
	fi
	cp $GESOUT/gec00.t$cyc\z.sfcanl $INIDIR/sfnanl.gfs.$PDY$cyc
	cp $GESOUT/gec00.t$cyc\z.sfcanl $INIDIR/nsnanl.gfs.$PDY$cyc
elif  [ $inflag = 0 ] ; then
	cp $GESOUT/ge$mem.t$cyc\z.sanl $INIDIR/gfnanl.gfs.$PDY$cyc
	cp $GESOUT/ge$mem.t$cyc\z.sfcanl $INIDIR/sfnanl.gfs.$PDY$cyc
	cp $GESOUT/ge$mem.t$cyc\z.sfcanl $INIDIR/nsnanl.gfs.$PDY$cyc
else
	cp $GESOUT/ge$mem.t$cyc\z.sanl $INIDIR/gfnanl.gfs.$PDY$cyc
	cp $GESOUT/ge$mem.t$cyc\z.sfcanl $INIDIR/sfnanl.gfs.$PDY$cyc
	cp $GESOUT/ge$mem.t$cyc\z.nsnanl $INIDIR/nsnanl.gfs.$PDY$cyc
fi

testfile=$INIDIR/sfnanl.gfs.$PDY$cyc                       
nsleep=0; tsleep=120;  msleep=50 
while test ! -s $testfile -a $nsleep -lt $msleep;do
  sleep $tsleep; nsleep=`expr $nsleep + 1`
done
$USHgsm/global_chgres_driver.sh

#.......................................................

exit
