#!/bin/ksh 

echo `date` $0 `date -u` begin

set -xa
export PS4='$SECONDS + '
date

###########################################
# Run gefs_config to get input parameters
###########################################
if [ "$RUN_ENVIR" = dev ]; then ### For Developers
# . $basesource/nw${envir}/versions/gefs.ver
	. $basesource/nwdev/parm/gefs_config
	export gefsmpexec=${gefsmpexec:-mpirun.lsf}
fi

export APRUN=${gefsmpexec_mpmd:-mpirun.lsf}

export CNVGRIB=$CNVGRIB21_GFS

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=$$
export DATA=${DATA:-${DATAROOT}/${job}.${pid}}

mkdir -p $DATA
cd $DATA

######################################
# Set up the cycle variable
######################################
export cycle=t${cyc}z

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gens}
export RUN=${RUN:-gefs}

####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-$COMROOT/logs/jlogfiles/jlogfile.${job}.${pid}}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

####################################
# Specify Execution Areas
####################################
export HOMEgefs=${HOMEgefs:-${NWROOT}/gefs.${gefs_ver}}

export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
export USHgefs=${USHgefs:-$HOMEgefs/ush}
export FIXgefs=${FIXgefs:-$HOMEgefs/fix}
export PARMgefs=${PARMgefs:-$HOMEgefs/parm}

export REDOUT='1>>'
export REDERR='2>'

##############################
# Run setpdy and initialize PDY variables
##############################
setpdy.sh
. PDY

##############################################
echo set parameters using gefs.parm
##############################################
. $PARMgefs/gefs.parm
. $PARMgefs/gefs_ensstat.parm

##############################################
# Define COM directories
##############################################
export COMIN=$COMROOT/${NET}/${envir}/gefs.${PDY}
export COMOUT=$COMROOT/${NET}/${envir}/gefs.${PDY}
export COMINm1=$COMROOT/${NET}/${envir}/gefs.${PDYm1}

mkdir -m 775 -p $COMOUT/$cyc/pgrb2a
mkdir -m 775 -p $COMOUT/$cyc/pgrb2alr
mkdir -m 775 -p $COMOUT/$cyc/pgrb2ap5

msg="HAS BEGUN on `hostname`"
postmsg "$jlogfile" "$msg"

####################################
# Specify Timeout Behavior of Post
#
# SLEEP_TIME - Amount of time to wait for
#              a restart file before exiting
# SLEEP_INT  - Amount of time to wait between
#              checking for restart files
####################################
export SLEEP_TIME=900
export SLEEP_INT=5

export NTHREADS=1
####################################
# Specify Forecast Hour Range
####################################
# allow different forecast lengths in different cycles
if [[ $envir = dev ]]; then
	case $cyc in
		(00) fhmax=$fhmax00 ;;
		(06) fhmax=$fhmax06 ;;
		(12) fhmax=$fhmax12 ;;
		(18) fhmax=$fhmax18 ;;
		(*)
			echo cyc=$cyc IS UNDEFINED 
			export pgm=JGEFS_ENSSTAT
			export err=111
			;;
	esac
fi # [[ $envir = dev ]]
if (( fhmaxh > fhmax )); then
  fhmaxh=$fhmax
fi

export FHINC=06

fcstlong=true
case $FORECAST_SEGMENT in
	(hr)
		# high resolution segment
		export FHINCP5=03
		export SHOUR=00
		if [[ $fcstlong = true ]]; then
			export FHOUR=$fhmaxh
		else
			export FHOUR=06
		fi
		;;
	(lr)
		# low resolution segment
		export FHINCP5=06
		export SHOUR=$(( $fhmaxh + FHINC ))
		if [[ $fcstlong = true ]]; then
			export FHOUR=$fhmax
		else
			export FHOUR=06
		fi
		;;
	(*)
		# whole forecast period
		export FHINCP5=03
		export SHOUR=00
		if [[ $fcstlong = true ]]; then
			export FHOUR=$fhmax
		else
			export FHOUR=06
		fi
		;;
esac # $FORECAST_SEGMENT

echo FORECAST_SEGMENT=$FORECAST_SEGMENT
echo makepgrba=$makepgrba
echo FHINC=$FHINC      
echo FHINCP5=$FHINCP5      
echo SHOUR=$SHOUR
echo FHOUR=$FHOUR
echo $makepgrba

env | sort

# Execute the script

#mpmd job with 2 tasks, 1 for 1d and 2.5d; 2 for 0.5d grid


#task 1, 1.0d and 2.5d, grid, dataset=a
export gridlist_1="hr,lr"
export FHINC_1=$FHINC
export dataset_1=a

#task 2, 0.5d grid, dataset=a
export gridlist_2="p5"
export FHINC_2=$FHINCP5
export dataset_2=a

#task 3, 0.5d grid, dataset=b
export gridlist_3="p5"
export FHINC_3=$FHINCP5
export dataset_3=b

export ext_h=""

subdata_1=${DATA}/${gridlist_1}${dataset_1}
outfile=${subdata_1}/${gridlist_1}.out
if [ ! -d ${subdata_1} ]; then mkdir -p ${subdata_1}; fi
echo "$HOMEgefs/scripts/exgefs_ensstat.sh.ecf $gridlist_1 $FHINC_1 ${subdata_1} $dataset_1 2>&1 >${outfile}" >>ensstat.cmdfile

subdata_2=${DATA}/${gridlist_2}${dataset_2}
if [ ! -d ${subdata_2} ]; then mkdir -p ${subdata_2}; fi
outfile=${subdata_2}/${gridlist_2}.out
echo "$HOMEgefs/scripts/exgefs_ensstat.sh.ecf $gridlist_2 $FHINC_2 ${subdata_2} $dataset_2 2>&1 >${outfile}" >>ensstat.cmdfile

subdata_3=${DATA}/${gridlist_3}${dataset_3}
if [ ! -d ${subdata_3} ]; then mkdir -p ${subdata_3}; fi
outfile=${subdata_3}/${gridlist_3}.out
echo "$HOMEgefs/scripts/exgefs_ensstat.sh.ecf $gridlist_3 $FHINC_3 ${subdata_3} $dataset_3 2>&1 >${outfile}" >>ensstat.cmdfile

cat ensstat.cmdfile
chmod 775 ensstat.cmdfile
export MP_CMDFILE=${DATA}/ensstat.cmdfile
export MP_PGMMODEL=mpmd
rm mpmd_cmdfile
ln -s $MP_CMDFILE mpmd_cmdfile
$APRUN

msg="JOB COMPLETED NORMALLY"
postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
cd $DATAROOT
if [ ${KEEPDATA:-NO} = NO ] ; then rm -rf $DATA ; fi
