#!/bin/sh

########################################
# Runs NAM Postprocessing up to 24 hours
########################################

set -xa
export MP_IOAGENT_CNT=all
export MP_IO_BUFFER_SIZE=8M
# #### 08/25/1999 ###################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + ' 
date
# 
# obtain unique process id (pid) and make temp directories
#
export pid=$$
export DATA=${DATAROOT}/${job}.${pid}
mkdir $DATA
cd $DATA 

####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-${DATA}/jlogfile}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

export cycle=t${cyc}z 

export SENDCOM=${SENDCOM:-YES}
export SENDECF=${SENDECF:-YES}
export SENDDBN=${SENDDBN:-YES}

export HOMEgefs=${HOMEgefs:-$NWROOT/gefs.${gefs_ver}}
export GEMPAKgefs=${GEMPAKgefs:-$HOMEgefs/gempak}
export PARMgefs=${PARMgefs:-$HOMEgefs/parm}

#
# Set up model and cycle specific variables
#
export NET=gens
export RUN=gefs
export fend=384
export finc=6
export finc_0p50=3
export fstart=00
export model=ensemble
export GRIB=
export EXT=""
export DBN_ALERT_TYPE=GEFS_GEMPAK

#
# Now set up GEMPAK/NTRANS environment
#
#
# Copy model specific GEMPAK tables into working directory
#

# Run setpdy and initialize PDY variables
setpdy.sh
. PDY

set -x

export COM=${COMROOT}/${NET}/${envir_in:-$envir}
export COMIN_RAW=${COM}/${RUN}.${PDY}/${cyc}/pgrb2a
export COMIN_P5=${COM}/${RUN}.${PDY}/${cyc}/pgrb2ap5
export COMIN_B=${COM}/${RUN}.${PDY}/${cyc}/pgrb2b
export COMIN_B_P5=${COM}/${RUN}.${PDY}/${cyc}/pgrb2bp5
#export COMOUT=${COMROOT}/nawips/${envir}/${RUN}.${PDY}
export COMOUT=${COMROOT}/${NET}/${envir}/gefs.${PDY}/$cyc/gempak

if [ ! -f $COMOUT ] ; then
  mkdir -p -m 775 $COMOUT
fi
 
env

########################################################
# Execute the script.
export COMIN=$COMIN_RAW
export model=raw

for member in c00 p01 p02 p03 p04 p05 p06 p07 p08 p09 p10 p11 p12 p13 p14 \
              p15 p16 p17 p18 p19 p20
do
  export RUN=ge${member}
  for resolution in 1p 0p50
  do
    #echo "$HOMEgefs/scripts/exnawips_gefs.sh.ecf  > $DATAHOLD/${member}.out 2>&1 " >> poescript
    echo "$HOMEgefs/scripts/exnawips_gefs.sh.ecf $RUN $member $resolution" >> poescript
  done
done
########################################################

cat poescript

chmod 775 $DATA/poescript
export MP_PGMMODEL=mpmd
export MP_CMDFILE=$DATA/poescript

## Execute the script.

#mpirun -n 21 cfp $MP_CMDFILE
mpirun -n 42 cfp $MP_CMDFILE

#for member in c00 p01 p02 p03 p04 p05 p06 p07 p08 p09 p10 p11 p12 p13 p14 \
#              p15 p16 p17 p18 p19 p20
#do
#   set +x
#   echo "######################################"
#   echo "  $member.OUT "
#   echo "######################################"
#   set -x
#   cat $member.out
#done

cd ${DATAROOT}
rm -rf $DATA

date

