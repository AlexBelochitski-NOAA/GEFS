#!/bin/ksh 
#####################################################################
# 9/20/2009, Julia Zhu   Scripts are modified to be sharable
#                        between EMC and NCO
#         Please note that variable "RUN_ENVIR" is set and used
#         in the development enviroment only.
######################################################################
na=`basename $0`
export PS4=' + $SECONDS $na $LINENO: '

export RUN_ENVIR=${RUN_ENVIR:-prod}

echo `date` $0 `date -u` begin

set -xa

###########################################
# Run gefs_config to get input parameters
###########################################
if [ "$RUN_ENVIR" = dev ]      ### For Developers
then
  . $basesource/nw$envir/*/versions/gefs_legacy.ver
  . $basesource/nwdev/gefs_legacy.${gefs_legacy_ver}/parm/gefs_config
fi

####################################
# obtain unique process id (pid) and make temp directory
####################################
export pid=$$
if [ "$RUN_ENVIR" = dev ]    ### For Developers
then
   export DATA_IN=${DATA_IN:-$basetmp/tmpnwprd1}
else                         ### For Operations
   export DATA_IN=$DATAROOT
fi
export DATA=$DATA_IN/${job}.${pid}

mkdir -p $DATA
cd $DATA

export cycle=t${cyc}z

####################################
# Specify NET and RUN Name and model
####################################
export NET=gens

####################################
# File To Log Msgs
####################################
if [ "$RUN_ENVIR" = dev ]     ### For Developers
then
  # RLW 20141008 modify to obtain and use version for vertical structure
  . $basesource/nw$envir/*/versions/gefs_legacy.ver
  . $basesource/nw$envir/gefs_legacy.${gefs_legacy_ver}/parm/gefs_config

   export jlogfile=${jlogfile:-$baselog/com/logs/jlogfile}
else                          ### For Operations
 if [[ $envir = "prod" ]]; then
   export jlogfile=${jlogfile:-/com/logs/jlogfiles/jlogfile.${job}.$$}
 else
   export jlogfile=/com/logs/${envir}/jlogfile
 fi
fi

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

####################################
# SENDECF  - Flag Events on ECF
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
####################################
if [ "$RUN_ENVIR" = dev ]         ### For Developers
then
  export SENDCOM=${SENDCOM:-YES}
  export SENDDBN=${SENDDBN:-NO}
  export SENDECF=${SENDECF:-YES}

  # Specify Execution Areas
  export HOMEGLOBAL=${HOMEGLOBAL:-/nw${envir}}
  export EXECGLOBAL=${EXECGLOBAL:-$HOMEGLOBAL/exec}
  export USHGLOBAL=${USHGLOBAL:-$HOMEGLOBAL/ush}
  export FIXGLOBAL=${FIXGLOBAL:-$HOMEGLOBAL/fix}
  export PARMGLOBAL=${PARMGLOBAL:-$HOMEGLOBAL/parm}

  export HOMEgefs=${HOMEgefs:-/nw${envir}/gefs_legacy.${gefs_legacy_ver}}
  export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
  export USHgefs=${USHgefs:-$HOMEgefs/ush}
  export FIXgefs=${FIXgefs:-$HOMEgefs/fix}
  export PARMgefs=${PARMgefs:-$HOMEgefs/parm}
else                             ### For Operations
  export SENDCOM=YES
  export SENDDBN=NO
  export SENDECF=YES

  # Specify Execution Areas
  export HOMEGLOBAL=${HOMEGLOBAL:-/nwparm}
  export EXECGLOBAL=${EXECGLOBAL:-$HOMEGLOBAL/exec}
  export USHGLOBAL=${USHGLOBAL:-$HOMEGLOBAL/ush}
  export FIXGLOBAL=${FIXGLOBAL:-$HOMEGLOBAL/fix}
  export PARMGLOBAL=${PARMGLOBAL:-$HOMEGLOBAL/parm}

  export HOMEgefs=${HOMEgefs:-/nw${envir}/gefs_legacy.${gefs_legacy_ver}}
  export EXECgefs=${EXECgefs:-$HOMEgefs/exec}
  export USHgefs=${USHgefs:-$HOMEgefs/ush}
  export FIXgefs=${FIXgefs:-$HOMEgefs/fix}
  export PARMgefs=${PARMgefs:-$HOMEgefs/parm}
fi

####################################
# Specify Execution Areas
####################################
export GRBINDEX=/nwprod/util/exec/grbindex

export HOMEUTIL=/nwprod/util
export EXECUTIL=$HOMEUTIL/exec
export FIXUTIL=$HOMEUTIL/fix

##############################
# Set up the UTILITIES
##############################
export utilscript=/nwprod/util/ush

##############################
# Run setup to initialize working directory and utility scripts
##############################
sh $utilscript/setup.sh

##############################
# Run setpdy and initialize PDY variables
##############################
sh $utilscript/setpdy.sh
. PDY

##############################################
# Define COM directories
##############################################
if [ "$RUN_ENVIR" = dev ]         ### For Developers
then
  export COM_IN=${COM_IN:-/global/noscrub/$LOGBAME/com/${NET}/${envir}}
  export COM_OUT=${COM_OUT:-/global/noscrub/$LOGBAME/com/${NET}/${envir}}

  export COMIN=$COM_IN/gefs_legacy.${PDY}
  export COMOUT=$COM_OUT/gefs_legacy.${PDY}
else                              ### For Operations
  export COMIN=/com/${NET}/${envir}/gefs_legacy.${PDY}
  export COMOUT=/com/${NET}/${envir}/gefs_legacy.${PDY}
fi

##############################################
echo set parameters using gefs.parm
##############################################
. $PARMgefs/gefs.parm

case $cyc in
  00) export fhmax=$fhmax00;;
  06) export fhmax=$fhmax06;;
  12) export fhmax=$fhmax12;;
  18) export fhmax=$fhmax18;;
esac

####################################
# Create member list
####################################
memberlist=""

(( imem = 0 ))
while (( imem < npair * 2 ))
do
  (( imem = imem + 1 ))
  if (( imem < 10 )); then
    imem=0$imem
  fi
  memberlist="$memberlist p$imem"
done
echo memberlist=$memberlist

echo
env | sort
echo

# Test GRIB files before cleaning up
echo `date` GRIB file test before cleanup begin
(( nmissing = 0 ))
for cyc_check in 00 06 12 18
do

  echo cyc=$cyc cyc_check=$cyc_check

  if (( cyc == cyc_check )); then
    export fcstlong=true
    export cfsuffix=""
    export cycsuffix=false
    memberlisttest="$memberlist c00"
  else
    export fcstlong=false
    export cfsuffix=".cycfs$cyc_check"
    export cycsuffix=true
    memberlisttest="$memberlist"
  fi

  for member in $memberlisttest
  do

    ####################################
    # Specify the Ensemble Member
    ####################################
    export RUN=ge${member}

    export PS4=' + $SECONDS $na $RUN R $LINENO: '

    ####################################
    # Specify Forecast Hour Range
    ####################################
    export FHINC=06

    export SHOUR=00

    filelist="\
      $COMIN/$cyc/master/ge$member.$cycle.master.grbanl$cfsuffix \
      $COMIN/$cyc/master/ge$member.$cycle.master.grbianl$cfsuffix \
      $COMIN/$cyc/pgrba/ge$member.$cycle.pgrbaanl$cfsuffix \
      $COMIN/$cyc/pgrba/ge$member.$cycle.pgrbaianl$cfsuffix \
      $COMIN/$cyc/pgrbb/ge$member.$cycle.pgrbbanl$cfsuffix \
      $COMIN/$cyc/pgrbb/ge$member.$cycle.pgrbbianl$cfsuffix \
      $COMIN/$cyc/pgrb2a/ge$member.$cycle.pgrb2aanl$cfsuffix \
      $COMIN/$cyc/pgrb2a/ge$member.$cycle.pgrb2aanl$cfsuffix.idx \
      $COMIN/$cyc/pgrb2b/ge$member.$cycle.pgrb2banl$cfsuffix \
      $COMIN/$cyc/pgrb2b/ge$member.$cycle.pgrb2banl$cfsuffix.idx \
    "
    for file in $filelist
    do
      if [[ ! -s $file ]]; then
	(( nmissing = nmissing + 1 ))
	echo nmissing=$nmissing file=$file IS MISSING
      fi
    done

    if [[ $fcstlong = true ]]; then
      export FHOUR=$fhmax
      if (( FHOUR < 10 )); then
	FHOUR=0$FHOUR
      fi
      export FHOUR
    else
      export FHOUR=06
    fi

    FH=$SHOUR
    while (( FH <= FHOUR ))
    do
      filelist="\
	$COMIN/$cyc/master/ge$member.$cycle.master.grbf$FH$cfsuffix \
	$COMIN/$cyc/master/ge$member.$cycle.master.grbif$FH$cfsuffix \
	$COMIN/$cyc/pgrba/ge$member.$cycle.pgrbaf$FH$cfsuffix \
	$COMIN/$cyc/pgrba/ge$member.$cycle.pgrbaif$FH$cfsuffix \
	$COMIN/$cyc/pgrbb/ge$member.$cycle.pgrbbf$FH$cfsuffix \
	$COMIN/$cyc/pgrbb/ge$member.$cycle.pgrbbif$FH$cfsuffix \
	$COMIN/$cyc/pgrb2a/ge$member.$cycle.pgrb2af$FH$cfsuffix \
	$COMIN/$cyc/pgrb2a/ge$member.$cycle.pgrb2af$FH$cfsuffix.idx \
	$COMIN/$cyc/pgrb2b/ge$member.$cycle.pgrb2bf$FH$cfsuffix \
	$COMIN/$cyc/pgrb2b/ge$member.$cycle.pgrb2bf$FH$cfsuffix.idx \
	$COMIN/$cyc/pgrbalr/ge$member.$cycle.pgrbaf$FH.2$cfsuffix \
	$COMIN/$cyc/pgrbblr/ge$member.$cycle.pgrbbf$FH.2$cfsuffix \
	$COMIN/$cyc/pgrb2alr/ge$member.$cycle.pgrb2af$FH.2$cfsuffix \
	$COMIN/$cyc/pgrb2alr/ge$member.$cycle.pgrb2af$FH.2$cfsuffix.idx \
	$COMIN/$cyc/pgrb2blr/ge$member.$cycle.pgrb2bf$FH.2$cfsuffix \
	$COMIN/$cyc/pgrb2blr/ge$member.$cycle.pgrb2bf$FH.2$cfsuffix.idx \
	$COMIN/$cyc/sfcsig/ge$member.$cycle.bf$FH$cfsuffix \
	$COMIN/$cyc/sfcsig/ge$member.$cycle.sf$FH$cfsuffix \
	$COMIN/$cyc/sflux/ge$member.$cycle.sfluxgrbf$FH$cfsuffix \
      "
      if (( FH > 0 )) && (( FH <= fhmax3 )); then
	(( FP = FH - 3 ))
	if (( FP < 10 )); then
	  FP=0$FP
	fi
	filelist="$filelist
	  $COMIN/$cyc/sfcsig/ge$member.$cycle.bf$FP$cfsuffix \
	  $COMIN/$cyc/sfcsig/ge$member.$cycle.sf$FP$cfsuffix \
	  $COMIN/$cyc/sflux/ge$member.$cycle.sfluxgrbf$FP$cfsuffix \
	"
      fi
      for file in $filelist
      do
	if [[ ! -s $file ]]; then
	  (( nmissing = nmissing + 1 ))
	  echo nmissing=$nmissing file=$file IS MISSING
	fi
      done

      (( FH = FH + FHINC ))
      if (( FH < 10 )); then
	FH=0$FH
      fi
    done
  done
done
echo nmissing=$nmissing
echo `date` GRIB file test before cleanup end
if (( nmissing > 0 )); then
  echo `date` GRIB file test before cleanup IDENTIFIED $nmissing MISSING FILES
  exit 99
else
# RLW 20130215 disable cleanup for testing
#     if [[ ${envir} = dev ]]; then
#        echo `date` "RLW 20130215 disable cleanup for testing"
# RLW 20130215 disable cleanup for testing
#     else
  echo `date` sfcsig sflux cleanup end
  for cyc_check in 00 06 12 18
  do

    echo cyc=$cyc cyc_check=$cyc_check

    if (( cyc == cyc_check )); then
      export fcstlong=true
      export cfsuffix=""
      export cycsuffix=false
      memberlisttest="$memberlist c00"
    else
      export fcstlong=false
      export cfsuffix=".cycfs$cyc_check"
      export cycsuffix=true
      memberlisttest="$memberlist"
    fi

    for member in $memberlisttest
    do

      ####################################
      # Specify the Ensemble Member
      ####################################
      export RUN=ge${member}

      export PS4=' + $SECONDS $na $RUN R $LINENO: '

      ####################################
      # Specify Forecast Hour Range
      ####################################
      export FHINC=06

      export SHOUR=00

      if [[ $fcstlong = true ]]; then
	if [[ x$HOUTSPS = x ]]; then
	  export FHOUR=$fhmax
	else
	(( FHOUR = fhmax - HOUTSPS - FHINC ))
	fi       
	if (( FHOUR < 10 )); then
	  FHOUR=0$FHOUR
	fi
	export FHOUR
      else
	export FHOUR=06
      fi

      ###########################################################
      # remove sigma, surface, and flux files
      ###########################################################
      $HOMEgefs/scripts/exgefs_post_cleanup.sh.ecf
    done
  done
  echo `date` sfcsig sflux cleanup end
  ########################################################
  # remove master post subdirectory
  ########################################################
  echo `date` before master cleanup
  rm -rf $COMIN/$cyc/master
  echo `date` after master cleanup
  ########################################################
  # remove restart subdirectories
  ########################################################
  echo `date` before restart cleanup
  rm -rf $COMIN/$cyc/restarta
  rm -rf $COMIN/$cyc/restartb
  echo `date` after restart cleanup
# RLW 20130215 disable cleanup for testing
#     fi
fi
########################################################
export PS4=' + $SECONDS $na $LINENO: '

##############################
# Remove the Temporary working directory
##############################
cd $DATA_IN
rm -rf $DATA

echo `date` $0 `date -u` end
