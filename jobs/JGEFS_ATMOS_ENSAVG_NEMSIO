#!/bin/ksh

echo $(date) $0 $(date -u) begin

set -xa
export PS4='$SECONDS + '
date

export FORECAST_SEGMENT=${FORECAST_SEGMENT:-hr}

export MODEL_OUT_FORM=binarynemsiompiio

export total_tasks=${total_tasks:-30}
export gefsmpexec=${gefsmpexec:-"mpirun -n $total_tasks"}
export APRUN=${gefsmpexec:-"mpirun -n $total_tasks"}

export GRIBVERSION=${GRIBVERSION:-grib2}

####################################
# obtain unique process id (pid) and make temp directory
###################################
export pid=$$
export DATA=${DATA:-${DATAROOT}/${job}.${pid}}
mkdir -p $DATA

cd $DATA

######################################
# Set up the cycle variable
######################################
export cycle=t${cyc}z

####################################
# Specify NET and RUN Name and model
####################################
export NET=${NET:-gefs}
export RUN=${RUN:-gefs}

####################################
# File To Log Msgs
####################################
export jlogfile=${jlogfile:-${DATA}/jlogfile.${job}.${pid}}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

####################################
# SENDCOM  - Copy Files From TMPDIR to $COMOUT
# SENDDBN  - Issue DBNet Client Calls
# SENDECF  - Flag Events on ECF
# VERBOSE  - Specify Verbose Output
####################################
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDECF=${SENDECF:-YES}
export VERBOSE=${VERBOSE:-YES}

# Specify Execution Areas
export HOMEgefs=${HOMEgefs:-${NWROOT}/gefs.${gefs_ver}}
export USHgefs=${USHgefs:-${HOMEgefs}/ush}
export PARMgefs=$HOMEgefs/parm

export HOMEgfs=${HOMEgfs:-$HOMEgefs}

export FIXglobal=${HOMEgfs}/fix
export FIXgfs=${HOMEgfs}/fix
export USHgfs=$HOMEgfs/ush
export EXECgfs=$HOMEgfs/exec

export HOMEgsi=${HOMEgsi:-$HOMEgfs}

export nemsioget=$EXECgfs/nemsio_get

export ERRSCRIPT=${ERRSCRIPT:-err_chk}
export LOGSCRIPT=startmsg
export REDOUT='1>>'
export REDERR='2>'

##############################
# Run setpdy and initialize PDY variables
##############################
setpdy.sh

. PDY

##############################################
# Define COM and GES directories
##############################################
export COMIN=$COMROOT/${NET}/${envir}/${RUN}.${PDY}/${cyc}/atmos
export COMOUT=$COMROOT/${NET}/${envir}/${RUN}.${PDY}/${cyc}/atmos

mkdir -m 775 -p $COMOUT/misc/ensavg_nemsio
############################################
# Run gefs.parm to get input variables
############################################
. $PARMgefs/gefs.parm

if [[ $FORECAST_SEGMENT = hr ]] ; then
    LEVS=$LEVSHR 
elif [[ $FORECAST_SEGMENT = lr ]]; then
    LEVS=$LEVSLR 
else
    echo FORECAST_SEGMENT= $FORECAST_SEGMENT is not supportted
    msg="FATAL ERROR: $job failed!"
    postmsg "$jlogfile" "$msg"
    exit $ERR
fi
#(( LEVS = LEVS -1 ))

####################################
# Specify Timeout Behavior of Post
#
# SLEEP_TIME - Amount of time to wait for
#              a restart file before exiting
# SLEEP_INT  - Amount of time to wait between
#              checking for restart files
####################################
export SLEEP_TIME=600
export SLEEP_INT=5

####################################
# Specify Forecast Hour Range
####################################

export SHOUR=${SHOUR:-00}
export FHOUR=${FHOUR:-180}
if (( FHOUR > fhmaxh )); then
	export FHOUR=$fhmaxh
fi
export FHOUT_HF=${FHOUTHF:-3}
export FHOUT_LF=${FHOUTLF:-6}
export FHMAX_HF=${FHMAXHF:-240}

echo SHOUR=$SHOUR
echo FHOUR=$FHOUR
echo FHOUT_LF=$FHOUT_LF
echo FHOUT_HF=$FHOUT_HF
echo FHMAX_HF=$FHMAX_HF

echo
env | sort
echo

export ensavg_nemsio_log=$DATA/ensavg_nemsio.$FORECAST_SEGMENT.log

#############################################################
# Execute the script
$HOMEgefs/scripts/exgefs_ensavg_nemsio.sh.ecf $DATA $SHOUR $FHOUT_HF $FHOUT_LF $FHMAXHF $FHOUR $ensavg_nemsio_log
#############################################################
err=$?

mv $ensavg_nemsio_log $COMOUT/misc/ensavg_nemsio

if [ $err = 0 ]; then
    msg="$job completed normally!"
else
    msg="FATAL ERROR: $job failed!"
fi
postmsg "$jlogfile" "$msg"

##############################
# Remove the Temporary working directory
##############################
cd $DATAROOT
if [ ${KEEPDATA:-NO} = NO ] ; then rm -rf $DATA ; fi

echo "$(date) $0 $(date -u) end"

exit $err
