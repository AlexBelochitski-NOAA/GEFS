#!/bin/ksh
export VERBOSE=yes
sname=`basename $0`
echo `date` $sname $member begin
#####################################################################
echo "-----------------------------------------------------"
echo " exgefs_prdgen.sh.sms" 
echo " based on exglobal_post.sh.sms and exglobal_post_pgrb2.sh.sms" 
echo " interpolate master post files (GRIB2) and convert to GRIB1"
echo " Sep 07 - Wobus - reorganized script"
echo " Aug 10 - Wobus - added test for control file from post"
echo " Jun 11 - Wobus - moved master post files to /com"
echo " Jun 14 - Hou   - adopted to grb2 version master files as input"
echo " Feb 17 - Meng  - Unify version for creating all grids(1.0, 2.5"
echo "                  and 0.5) files. "
echo " Sep 18 - Cui   - add option for 0.25d grids "
echo "-----------------------------------------------------"
#####################################################################
export PS4='+ $SECONDS $sname $member $LINENO: '

set -xa
na=`basename $0`

cd $DATA

msg="HAS BEGUN on `hostname`"
postmsg "$jlogfile" "$msg"

if [[ "$cycsuffix" = "true" ]]; then
	export cfsuffix=".cycfs$cyc_fcst"
else
	export cfsuffix=""
fi
echo cyc=$cyc cyc_fcst=$cyc_fcst
echo cycle=$cycle cycle_fcst=$cycle_fcst
echo fcstlong=$fcstlong
echo cycsuffix=$cycsuffix
echo cfsuffix=$cfsuffix

export jobdir="${1}"                   # ${DATA}/${stream}
export stream="${2}"                   # PRDGEN_STREAMS
export jobgrid="${3}"                  # PRDGEN_GRID[$stream]
export grid_spec="${4}"                # PRDGEN_GRID_SPEC[$stream]
typeset -a hours="${5}"                # PRDGEN_HOURS[$stream]
export submc="${6}"                    # PRDGEN_SUBMC[$stream]
export pgad="${7}"                     # PRDGEN_A_DIR[$stream]
export pgbd="${8}"                     # PRDGEN_B_DIR[$stream]
export pgapre="${9}"                   # PRDGEN_A_PREFIX[$stream]
export pgbpre="${10}"                  # PRDGEN_B_PREFIX[$stream]
export do_analysis="${11}"             # PRDGEN_DO_ANALYSIS[$stream]

export MP_LABELIO=YES
export GRID=$jobgrid   # GRID is part of the DBN message

############################################################
# clean up missing markers from previous run
############################################################
mkdir -m 775 -p $COMOUT/$cyc/misc/$submc
cd $COMOUT/$cyc/misc/$submc
rc=$?
if (( rc == 0 )); then
	for file in $RUNMEM.*.missing; do
		if [[ -f $file ]]; then
			echo "$(date) removing $COMOUT/$cyc/misc/$submc/$file"
			rm -f $COMOUT/$cyc/misc/$submc/$file
		fi
	done # for file in $RUNMEM.*.missing
fi # (( rc == 0 ))
#cd $DATA
cd $jobdir

SLEEP_LOOP_MAX=`expr $SLEEP_TIME / $SLEEP_INT`

for hour in $hours; do

	if [[ $do_analysis = YES ]] && (( hour == 0 )); then
		export ffhr=anl
		export fhr=00

		export mcfile=$COMOUT/$cyc/misc/post/$RUNMEM.$cycle.master.control.anl$cfsuffix
		export mafile=$COMOUT/$cyc/master/$RUNMEM.$cycle.master.grb2anl$cfsuffix
		export mifile=$COMOUT/$cyc/master/$RUNMEM.$cycle.master.grb2ianl$cfsuffix

		export pcfile=$COMOUT/$cyc/misc/$submc/${RUNMEM}.t${cyc}z.prdgen.control.anl$cfsuffix
		export fileaout=$COMOUT/$cyc/$pgad/$RUNMEM.$cycle.${pgapre}anl$pgasuf$cfsuffix
		export fileaouti=$COMOUT/$cyc/$pgad/$RUNMEM.$cycle.${pgapre}anl$pgasuf$cfsuffix.idx
		export filebout=$COMOUT/$cyc/$pgbd/$RUNMEM.$cycle.${pgbpre}anl$pgasuf$cfsuffix
		export filebouti=$COMOUT/$cyc/$pgbd/$RUNMEM.$cycle.${pgbpre}anl$pgasuf$cfsuffix.idx

		ic=1
		while [ $ic -le $SLEEP_LOOP_MAX ]; do
			testfhr=-1
			if [[ -f $mcfile ]]; then
				teststring=`cat $mcfile|head -1`
				if [[ $teststring != '' ]]; then
					if [[ -f $mifile ]]; then
						testfhr=`echo $teststring | cut -c11-13`
					fi
				fi # [[ $teststring != '' ]]
			fi # [[ -f $mcfile ]]
			echo "testfhr=$testfhr fhr=$fhr"

			if (( testfhr >= fhr )); then
				break
			else
				ic=`expr $ic + 1`
				sleep $SLEEP_INT
			fi # (( testfhr >= fhr ))

			###############################
			# If we reach this point assume
			# fcst job never reached restart 
			# period and write file to
			# indicate missing data
			###############################
			if [ $ic -eq $SLEEP_LOOP_MAX ]; then
				date >$COMOUT/$cyc/misc/$submc/${RUNMEM}.t${cyc}z.anl$cfsuffix.missing
				echo "$(date) $sname $member post data missing for analysis"
				msg="$member MISSING POST DATA for analysis"
				postmsg "$jlogfile" "$msg"
				export err=1; err_chk
			fi # [ $ic -eq $SLEEP_LOOP_MAX ]

		done # [ $ic -le $SLEEP_LOOP_MAX ]

		#
		# If control file already exists and skip if all output also present, otherwise
		#   delete control file to rerun. 
		#
		if [[ -s $pcfile ]]; then
			nmissing=0
			for file in $fileaout $fileaouti $filebout $filebouti; do
				if [[ ! -s $file ]]; then
					echo file=$file IS MISSING
					(( nmissing = nmissing + 1 ))
				fi
			done # for file in $fileaout $fileaouti $filebout $filebouti
			if (( nmissing > 0 )); then
				rm $pcfile
			fi
		else
			nmissing=1
		fi # [[ -s $pcfile ]]

		if [[ ! -s $pcfile ]]; then
			$USHgefs/gefs_prdgen.sh 

			####################################
			# send control files to misc
			####################################
			if test $SENDCOM = "YES"; then
				echo "$PDY$cyc$pfhr" > $pcfile
			fi # test $SENDCOM = "YES"
		fi # [[ ! -s $pcfile ]]
	fi # [[ $do_analysis = YES ]] && (( hour == 0 ))

	export fhr=$(printf "%02.0f" $hour)        # Zero-pad to two places
	export pfhr=$(printf "%03.0f" $hour)       # Zero-pad to three places
	export ffhr="f${fhr}"

	###############################
	# Start Looping for the 
	# existence of the restart files
	###############################
	export pgm="postcheck"

	export mcfile=$COMOUT/$cyc/misc/post/$RUNMEM.$cycle.master.control.f$fhr$cfsuffix
	export mafile=$COMOUT/$cyc/master/$RUNMEM.$cycle.master.grb2f$fhr$cfsuffix
	export mifile=$COMOUT/$cyc/master/$RUNMEM.$cycle.master.grb2if$fhr$cfsuffix

	export pcfile=$COMOUT/$cyc/misc/$submc/${RUNMEM}.t${cyc}z.prdgen.control.f${pfhr}$cfsuffix
	export fileaout=$COMOUT/$cyc/$pgad/$RUNMEM.$cycle.${pgapre}f${pfhr}$pgasuf$cfsuffix
	export fileaouti=$COMOUT/$cyc/$pgad/$RUNMEM.$cycle.${pgapre}f${pfhr}$pgasuf$cfsuffix.idx
	export filebout=$COMOUT/$cyc/$pgbd/$RUNMEM.$cycle.${pgbpre}f${pfhr}$pgasuf$cfsuffix
	export filebouti=$COMOUT/$cyc/$pgbd/$RUNMEM.$cycle.${pgbpre}f${pfhr}$pgasuf$cfsuffix.idx

	ic=1
	while [ $ic -le $SLEEP_LOOP_MAX ]; do
		testfhr=-1
		if [[ -f $mcfile ]]; then
			teststring=`cat $mcfile|head -1`
			if [[ $teststring != '' ]]; then
				if [[ -f $mifile ]]; then
					testfhr=`echo $teststring | cut -c11-13`
				fi
			fi # [[ $teststring != '' ]]
		else
			echo " file mcfile missing"
		fi # [[ -f $mcfile ]]

		echo testfhr=$testfhr fhr=$fhr

		if (( testfhr >= fhr )); then
			break
		else
			ic=`expr $ic + 1`
			sleep $SLEEP_INT
		fi # (( testfhr >= fhr ))

		###############################
		# If we reach this point assume
		# fcst job never reached restart 
		# period and error exit
		###############################
		if [ $ic -eq $SLEEP_LOOP_MAX ]; then
			date >$COMOUT/$cyc/misc/$submc/${RUNMEM}.t${cyc}z.f$pfhr$cfsuffix.missing
			echo "$(date) $sname $member missing post data for hour $fhr"
			msg="$member MISSING POST DATA for hour $fhr"
			postmsg "$jlogfile" "$msg"
			export err=1; err_chk
		fi # [ $ic -eq $SLEEP_LOOP_MAX ]
	done # while [ $ic -le $SLEEP_LOOP_MAX ]

	msg="Starting post for fhr=$fhr"
	postmsg "$jlogfile" "$msg"

	#################################### 
	# control the inclusion of perturbation identifiers
	# in the GRIB1 ensemble PDS header extension
	####################################

	if [[ -s $pcfile ]]; then
		nmissing=0
		for file in $fileaout $fileaouti $filebout $filebouti; do
			if [[ ! -s $file ]]; then
				echo file=$file IS MISSING
				(( nmissing = nmissing + 1 ))
			fi
		done # for file in $fileaout $fileaouti $filebout $filebouti
		if (( nmissing > 0 )); then
			rm $pcfile
		fi
	else
		nmissing=1
	fi # [[ -s $pcfile ]]

	if [[ ! -s $pcfile ]]; then
		$USHgefs/gefs_prdgen.sh

		####################################
		# send control files to misc
		####################################
		if test $SENDCOM = "YES"; then
			echo "$PDY$cyc$pfhr" > $pcfile
		fi # test $SENDCOM = "YES"
	fi # [[ ! -s $pcfile ]]

	#####################################################################
	#DHOU, 09/17/2015, added this block for global wave ensemble trigger
	#0p5 only
	#####################################################################
	if [[ "$jobgrid" = "0p5" ]] && [[ $fhr -eq 240 ]]; then
		ecflow_client --event pgrb2ap5_f240_ready
	fi
done # for hour in $hours

msg='ENDED NORMALLY.'
postmsg "$jlogfile" "$msg"

################## END OF SCRIPT #######################
