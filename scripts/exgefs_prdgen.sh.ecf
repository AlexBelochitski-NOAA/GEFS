#!/bin/ksh
export VERBOSE=yes
sname=`basename $0`
echo `date` $sname $member begin
#####################################################################
echo "-----------------------------------------------------"
echo " exgefs_prdgen.sh.sms" 
echo " based on exglobal_post.sh.sms and exglobal_post_pgrb2.sh.sms" 
echo " interpolate master post files (GRIB2) and convert to GRIB1"
echo " Sep 07 - Wobus - reorganized script"
echo " Aug 10 - Wobus - added test for control file from post"
echo " Jun 11 - Wobus - moved master post files to /com"
echo " Jun 14 - Hou   - adopted to grb2 version master files as input"
echo " Feb 17 - Meng  - Unify version for creating all grids(1.0, 2.5" 
echo "                  and 0.5) files. "
echo "-----------------------------------------------------"
#####################################################################
export PS4='+ $SECONDS $sname $member $LINENO: '

set -xa
na=`basename $0`

cd $DATA

msg="HAS BEGUN on `hostname`"
postmsg "$jlogfile" "$msg"

if [[ "$cycsuffix" = "true" ]]; then
  export cfsuffix=".cycfs$cyc_fcst"
else
  export cfsuffix=""
fi
echo cyc=$cyc cyc_fcst=$cyc_fcst
echo cycle=$cycle cycle_fcst=$cycle_fcst
echo fcstlong=$fcstlong
echo cycsuffix=$cycsuffix
echo cfsuffix=$cfsuffix

export SHOUR=$1
export FHOUR=$2
export FHINC=$3
#export DO_LOW_RES=$4
export DOANALYSIS=$4
export jobgrid=$5
export jobdir=$6

export MP_LABELIO=YES

case $jobgrid in
  1p0) submc=prd1p0
       pgad=pgrb2a
       pgbd=pgrb2b
       pgapre=pgrb2a
       pgbpre=pgrb2b
       pgasuf=
       ;;
  2p5) submc=prd2p5
       pgad=pgrb2alr
       pgbd=pgrb2blr
       pgapre=pgrb2a
       pgbpre=pgrb2b
       pgasuf=.2
       ;;
  0p5) submc=prd0p5
       pgad=pgrb2ap5
       pgbd=pgrb2bp5
       pgapre=pgrb2a.0p50.
       pgbpre=pgrb2b.0p50.
       pgasuf=
       ;;
esac

############################################################
# clean up missing markers from previous run
############################################################
mkdir -m 775 -p $COMOUT/$cyc/misc/$submc
cd $COMOUT/$cyc/misc/$submc
rc=$?
if (( rc == 0 )); then
  for file in $RUN.*.missing
  do
    if [[ -f $file ]]; then
      echo `date` removing $COMOUT/$cyc/misc/$submc/$file
      rm -f $COMOUT/$cyc/misc/$submc/$file
    fi
  done
fi
#cd $DATA
cd $jobdir

############################################################
#  Define Variables:
#  -----------------
#  SHOUR        is the starting forecast hour. normally 0 except for restarts.
#  FHOUR        is the ending forecast hour.
#  FHINC        is the increment hour for each forecast steps.
#  FH           is the current forecast hour.
#  SLEEP_TIME   is the number of seconds to sleep before exiting with error.
#  SLEEP_INT    is the number of seconds to sleep between restrt file checks.
#  restart_file is the name of the file to key off of to kick off post.
############################################################

SLEEP_LOOP_MAX=`expr $SLEEP_TIME / $SLEEP_INT`

############################################################
# Post Analysis Files before starting the Forecast Post 
############################################################ 
if [[ $DOANALYSIS = YES ]]; then
############################################################ 
# wait for master post to be finished
############################################################
if (( SHOUR == 0 )); then

  export ffhr=anl
  export fhr=00
  export anlflag=yes

  ic=1
  while [ $ic -le $SLEEP_LOOP_MAX ]
  do
     #20100730 change test to use master control file
     # JY mcfile=$COMOUT/$cyc/misc/post/$RUN.$cycle.master.control.anl$cfsuffix
     mcfile=$COMIN/$cyc/misc/post/$RUN.$cycle.master.control.anl$cfsuffix
     testfhr=-1
     if [[ -f $mcfile ]]; then
       teststring=`cat $mcfile|head -1`
       if [[ $teststring != '' ]]; then
	 # JY if [[ -f $COMOUT/$cyc/master/$RUN.$cycle.master.grb2ianl$cfsuffix ]]; then
	 if [[ -f $COMIN/$cyc/master/$RUN.$cycle.master.grb2ianl$cfsuffix ]]; then
	   testfhr=`echo $teststring | cut -c11-13`
	 fi
       fi
     fi
     echo testfhr=$testfhr fhr=$fhr

     if (( testfhr >= fhr )); then
	break
     else
	ic=`expr $ic + 1`
	sleep $SLEEP_INT
     fi
     ###############################
     # If we reach this point assume
     # fcst job never reached restart 
     # period and write file to
     # indicate missing data
     ###############################
     if [ $ic -eq $SLEEP_LOOP_MAX ]
     then
	date >$COMOUT/$cyc/misc/$submc/${RUN}.t${cyc}z.anl$cfsuffix.missing
	echo `date` $sname $member post data missing for analysis
	msg="$member MISSING POST DATA for analysis"
	postmsg "$jlogfile" "$msg"
	export err=1; err_chk
     fi
  done

  #######################################################
  # control the inclusion of perturbation identifiers
  # in the GRIB1 ensemble PDS header extension
  #######################################################
  export addgrb1id=yes

  export pcfile=$COMOUT/$cyc/misc/$submc/${RUN}.t${cyc}z.prdgen.control.anl$cfsuffix
  export fileaout=$COMOUT/$cyc/$pgad/$RUN.$cycle.${pgapre}anl$pgasuf$cfsuffix
  export fileaouti=$COMOUT/$cyc/$pgad/$RUN.$cycle.${pgapre}anl$pgasuf$cfsuffix.idx
  export filebout=$COMOUT/$cyc/$pgbd/$RUN.$cycle.${pgbpre}anl$pgasuf$cfsuffix
  export filebouti=$COMOUT/$cyc/$pgbd/$RUN.$cycle.${pgbpre}anl$pgasuf$cfsuffix.idx
  if [[ -s $pcfile ]]; then
    nmissing=0
    for file in $fileaout $fileaouti $filebout $filebouti
    do
      if [[ ! -s $file ]]; then
        echo file=$file IS MISSING
	(( nmissing = nmissing + 1 ))
      fi
    done
    if (( nmissing > 0 )); then
      rm $pcfile
    fi
  else
    nmissing=1
  fi

  if [[ ! -s $pcfile ]]; then

     $USHgefs/gefs_prdgen.sh

    ####################################
    # send control files to misc
    ####################################
    if test $SENDCOM = "YES"
    then
      if test $fhr -lt 100
      then
	pad="0"
      else
	pad=""
      fi
      echo "$PDY$cyc$pad$fhr" > $COMOUT/$cyc/misc/$submc/${RUN}.t${cyc}z.prdgen.control.anl$cfsuffix
    fi

  fi

fi

fi # DOANALYSIS

############################################################
# Initialize Loop Through the Post Forecast Files 
############################################################

(( fhr=SHOUR))

if test $fhr -lt 10
then
   fhr="0$fhr"
fi
export fhr

export anlflag=no

############################################################
# Loop Through the Post Forecast Files 
############################################################
while test $fhr -le $FHOUR
do
    ffhr=f$fhr

    ###############################
    # Start Looping for the 
    # existence of the restart files
    ###############################
    export pgm="postcheck"
    ic=1

    while [ $ic -le $SLEEP_LOOP_MAX ]
    do
       #20100730 change test to use master control file
       # JY mcfile=$COMOUT/$cyc/misc/post/$RUN.$cycle.master.control.f$fhr$cfsuffix
       mcfile=$COMIN/$cyc/misc/post/$RUN.$cycle.master.control.f$fhr$cfsuffix
       testfhr=-1
       if [[ -f $mcfile ]]; then
	 teststring=`cat $mcfile|head -1`
	 if [[ $teststring != '' ]]; then
	   # JY if [[ -f $COMOUT/$cyc/master/$RUN.$cycle.master.grb2i$ffhr$cfsuffix ]]; then
	   if [[ -f $COMIN/$cyc/master/$RUN.$cycle.master.grb2i$ffhr$cfsuffix ]]; then
	     testfhr=`echo $teststring | cut -c11-13`
	   fi
	 fi
       fi
       echo testfhr=$testfhr fhr=$fhr
       if (( testfhr >= fhr )); then
          break
       else
          ic=`expr $ic + 1`
          sleep $SLEEP_INT
       fi
       ###############################
       # If we reach this point assume
       # fcst job never reached restart 
       # period and error exit
       ###############################
       if [ $ic -eq $SLEEP_LOOP_MAX ]
       then
	  date >$COMOUT/$cyc/misc/$submc/${RUN}.t${cyc}z.f$ffhr$cfsuffix.missing
	  echo `date` $sname $member missing post data for hour $fhr
	  msg="$member MISSING POST DATA for hour $fhr"
	  postmsg "$jlogfile" "$msg"
	  export err=1; err_chk
       fi
    done

   msg="Starting post for fhr=$fhr"
   postmsg "$jlogfile" "$msg"


  #################################### 
  # control the inclusion of perturbation identifiers
  # in the GRIB1 ensemble PDS header extension
  ####################################
  export addgrb1id=yes

  if [[ "$jobgrid" = "0p5" ]] && [[ $fhr -lt 100 ]]; then
    pad="0"
  else
    pad=""
  fi

  export pcfile=$COMOUT/$cyc/misc/$submc/${RUN}.t${cyc}z.prdgen.control.f${fhr}$cfsuffix
  export fileaout=$COMOUT/$cyc/$pgad/$RUN.$cycle.${pgapre}f${pad}${fhr}$pgasuf$cfsuffix
  export fileaouti=$COMOUT/$cyc/$pgad/$RUN.$cycle.${pgapre}f${pad}${fhr}$pgasuf$cfsuffix.idx
  export filebout=$COMOUT/$cyc/$pgbd/$RUN.$cycle.${pgbpre}f${pad}${fhr}$pgasuf$cfsuffix
  export filebouti=$COMOUT/$cyc/$pgbd/$RUN.$cycle.${pgbpre}f${pad}${fhr}$pgasuf$cfsuffix.idx
  if [[ -s $pcfile ]]; then
    nmissing=0
    for file in $fileaout $fileaouti $filebout $filebouti
    do
      if [[ ! -s $file ]]; then
        echo file=$file IS MISSING
	(( nmissing = nmissing + 1 ))
      fi
    done
    if (( nmissing > 0 )); then
      rm $pcfile
    fi
  else
    nmissing=1
  fi

  if [[ ! -s $pcfile ]]; then

    $USHgefs/gefs_prdgen.sh

    ####################################
    # send control files to misc
    ####################################
    if test $SENDCOM = "YES"
    then
      if test $fhr -lt 100
      then
	pad="0"
      else
	pad=""
      fi
      echo "$PDY$cyc$pad$fhr" > $COMOUT/$cyc/misc/$submc/${RUN}.t${cyc}z.prdgen.control.f$fhr$cfsuffix
    fi

  fi

#####################################################################
#DHOU, 09/17/2015, added this block for global wave ensemble trigger
#0p5 only
#####################################################################
if [[ "$jobgrid" = "0p5" ]] && [[ $fhr -eq 240 ]]; then
  ecflow_client --event pgrb2ap5_f240_ready
fi

  export fhr=`expr $fhr + $FHINC`
  if test $fhr -lt 10
  then
     export fhr="0$fhr"
  fi
done
########################################################


msg='ENDED NORMALLY.'
postmsg "$jlogfile" "$msg"

################## END OF SCRIPT #######################
