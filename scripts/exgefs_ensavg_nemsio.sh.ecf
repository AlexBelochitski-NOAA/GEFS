#!/bin/ksh

echo `date` $0 begin

set -xa

echo DATA=$DATA

VERBOSE=${VERBOSE:-"YES"}
if [ $VERBOSE = "YES" ]; then
   echo $(date) EXECUTING $0 $* >&2
   set -x
fi

############################################################
#  Define Variables:
#  -----------------
#  SHOUR        is the starting forecast hour. normally 0 except for restarts.
#  FHOUR        is the ending forecast hour.
#  FHINC        is the increment hour for each forecast steps.
#  fhr          is the current forecast hour.
#  SLEEP_TIME   is the number of seconds to sleep before exiting with error.
#  SLEEP_INT    is the number of seconds to sleep between restrt file checks.
############################################################

export jobdir="${1}"
export SHOUR="${2}"
export FHOUTHF="${3}"
export FHOUTLF="${4}"
export FHMAXFH="${5}"
export FHOUR="${6}"
export ensavg_nemsio_log="${7}"
cd $jobdir

export CASE=${CASE:-384}
ntiles=${ntiles:-6}

# Utilities
ERRSCRIPT=${ERRSCRIPT:-'eval [[ $ERR = 0 ]]'}
NCP=${NCP:-"/bin/cp -p"}
NLN=${NLN:-"/bin/ln -sf"}
NMV=${NMV:-"/bin/mv -uv"}
nemsioget=${nemsioget:-${NWPROD}/exec/nemsio_get}

GETATMENSMEANEXEC=${GETATMENSMEANEXEC:-$HOMEgsi/exec/getsigensmeanp_smooth.x}
GETSFCENSMEANEXEC=${GETSFCENSMEANEXEC:-$HOMEgsi/exec/getsfcensmeanp.x}

SLEEP_LOOP_MAX=`expr $SLEEP_TIME / $SLEEP_INT`

# Compute ensemble mean 
export OMP_NUM_THREADS=4
echo memberlist=${memberlist}
$NCP $GETATMENSMEANEXEC $DATA
$NCP $GETSFCENSMEANEXEC $DATA

FHINC=$FHOUTHF
fhr=$SHOUR
while [[ $fhr -le $FHOUR ]];
do
    fhr=$(printf %03i $fhr)
    nfile=$npert
    for mem in $memberlist; do
        mem2=$(printf %02i $mem)
        ic=0
        while [ $ic -le $SLEEP_LOOP_MAX ]; do
            if test -f  $COMIN/$cyc/sfcsig/gep${mem2}.${cycle}.logf${fhr}.nemsio; then
                $NLN $COMIN/$cyc/sfcsig/gep${mem2}.${cycle}.atmf${fhr}.nemsio ./atm_mem$mem
                $NLN $COMIN/$cyc/sfcsig/gep${mem2}.${cycle}.sfcf${fhr}.nemsio ./sfc_mem$mem
                break
            else
                ic=`expr $ic + 1`
                sleep $SLEEP_INT
            fi
            if [ $ic -eq $SLEEP_LOOP_MAX ]; then
                (( nfile = nfile - 1 ))
                echo "WARNING: `date` forecast gep${mem2} missing for hour $fhr"
            fi # [ $ic 
        done
    done
    if [ $nfile -le 1 ]; then
        echo "`date` Not enough forecast files for average at  hour $fhr"
        msg="FATAL ERROR: Not enough forecast files for average at  hour $fhr"
        postmsg "$jlogfile" "$msg"
        export ERR=1
        $ERRSCRIPT || exit $ERR
    fi # [ $ic
    
    $NLN $COMOUT/$cyc/sfcsig/geavg.${cycle}.atmf${fhr}.nemsio ./atm_ensmean
    $NLN $COMOUT/$cyc/sfcsig/geavg.${cycle}.sfcf${fhr}.nemsio ./sfc_ensmean
    $APRUN ${DATA}/$(basename $GETATMENSMEANEXEC) ./ atm_ensmean atm $nfile
    $APRUN ${DATA}/$(basename $GETSFCENSMEANEXEC) ./ sfc_ensmean sfc $nfile
    
    echo "f${fhr}_done --- `date -u`" >> $ensavg_nemsio_log
    
    export ERR=$?
    $R || exit 2
    echo completed fv3gfs average fhour= $fhr > $COMOUT/$cyc/sfcsig/geavg.${cycle}.logf${fhr}.nemsio         
    if [ $fhr -ge $FHMAXFH ]
    then
        FHINC=$FHOUTLF
    fi
    (( fhr = fhr + FHINC ))
done

#cd $pwd
#[[ ${KEEPDATA:-"NO"} = "NO" ]] && rm -rf $DATA

set +x
if [ $VERBOSE = "YES" ]; then
    echo $(date) EXITING $0 with return code $ERR >&2
fi

exit $ERR
