#!/bin/sh
#
# monitor the gfs parallel ensemble
#
#
# this version uses the "today" variables to find data
# choose a current cycle and set up the date variables
#
NET=gens
echo

#
# set up the directories
#

nldir=`pwd`
nlddir=`dirname $nldir`
nldbdir=`basename $nlddir`
nldddir=`dirname $nlddir`
nlddbdir=`basename $nldddir`
echo nldir=$nldir
echo nlddir=$nlddir
echo nldbdir=$nldbdir
echo nldddir=$nldddir
echo nlddbdir=$nlddbdir

callstring=`echo $*|tr " " "."`.`basename $0`
envir=`echo $nldbdir|cut -c3-`
echo callstring=$callstring envir=$envir

expid=$nlddbdir
id=`echo $expid|cut -c3-4`
echo expid=$expid id=$id

cwd=`dirname $0`
echo cwd=$cwd

. $cwd/setbase

echo basesource=$basesource
echo baseoutput=$baseoutput
echo basebin=$basebin

comgens=$baseoutput/..
echo comgens=$comgens

echo
echo watch for jobs
echo

(( interval = 601 ))
if (( $# > 0 )); then
  (( interval = $1 ))
fi
(( time = 0 ))
(( timemax = 86400 * 30 ))
while (( time < timemax ))
do

  filestring=
  dirao=old
  for na in 1 2 3
  do
    if [[ -d $comgens ]]; then
      cd $comgens
      dira=`ls -rtd1 ???? 2>/dev/null | tail -$na | head -1`
      #echo dira=$dira dirao=$dirao
      if [[ $dira != $dirao ]]; then
	if [[ -d $dira ]]; then
	  (( nfile = 0 ))
	  (( nda = 0 ))
	  (( ndb = 0 ))
	  (( ndc = 0 ))
	  (( ndd = 0 ))
	  dirbo=old
	  nbstring=1
	  if (( ndb < 99 )); then
	    nbstring="1 2"
	  fi
	  for nb in $nbstring
	  do
	    if [[ -d $comgens/$dira/com/gens/dev ]]; then
	      cd $comgens/$dira/com/gens/dev
	      dirb=`ls -rtd1 ge* 2>/dev/null | tail -$nb | head -1`
	      #echo dirb=$dirb dirbo=$dirbo
	      if [[ $dirb != $dirbo ]]; then
		if [[ -d $comgens/$dira/com/gens/dev/$dirb ]]; then
		  dirco=old
		  ncstring=1
		  if (( ndc < 99 )); then
		    ncstring="1 2"
		  fi
		  for nc in $ncstring
		  do
		    cd $comgens/$dira/com/gens/dev/$dirb
		    dirc=`ls -rtd1 * 2>/dev/null | tail -$nc | head -1`
		    #echo dirc=$dirc dirco=$dirco
		    if [[ $dirc != $dirco ]]; then
		      if [[ -d $comgens/$dira/com/gens/dev/$dirb/$dirc ]]; then
			dirdo=old
			ndstring=1
			if (( ndd < 99 )); then
			  ndstring="1 2"
			fi
			for nd in $ndstring
			do
			  cd $comgens/$dira/com/gens/dev/$dirb/$dirc
			  dird=`ls -rtd1 * 2>/dev/null | tail -$nd | head -1`
			  #echo dird=$dird dirdo=$dirdo
			  if [[ $dird != $dirdo ]]; then
			    if [[ -d $comgens/$dira/com/gens/dev/$dirb/$dirc/$dird ]]; then
			      cd $comgens/$dira/com/gens/dev/$dirb/$dirc/$dird
			      fileo=old
			      nfstring=1
			      if (( nfile < 99 )); then
				nfstring="1 2"
			      fi
			      for nf in $nfstring
			      do
				file=`ls -r1t | tail -$nf | head -1 `
				# echo file=$file fileo=$fileo
				if [[ $file != $fileo ]]; then
				  if [[ -f $file ]]; then
				    filestring="$filestring $dira/com/gens/dev/$dirb/$dirc/$dird/$file"
				    #echo filestring=$filestring | tr " " "\n"
				    (( nfile = nfile + 1 ))
				    (( ndd = ndd + 1 ))
				    (( ndc = ndc + 1 ))
				    (( ndb = ndb + 1 ))
				    (( nda = nda + 1 ))
				  fi
				fi
				fileo=$file
			      done
			      if (( 0 == 1 )); then
			      if (( nfile < 3 )); then
				file=`ls -1rt | tail -1 `
				echo file=$file fileo=$fileo
				if [[ -f $file ]]; then
				  filestring="$filestring $dira/com/gens/dev/$dirb/$dirc/$dird/$file"
				  (( nfile=nfile+1 ))
				else
				  filestring="$filestring $dira/com/gens/dev/$dirb/$dirc/$dird"
				fi
				fileo=$file
			      fi
			      if (( nfile < 3 )); then
				file=`ls -1rt | tail -2 | head -1`
				echo file=$file fileo=$fileo
				if [[ -f $file ]]; then
				  if [[ $file != $fileo ]]; then
				    filestring="$filestring $dira/com/gens/dev/$dirb/$dirc/$dird/$file"
				    (( nfile=nfile+1 ))
				  fi
				fi
				fileo=$file
			      fi
			    fi
			    fi
			    dirdo=$dird
			  fi
			done
		      fi
		      dirco=$dirc
		    fi
		  done
		fi
		dirbo=$dirb
	      fi
	    fi
	  done
	fi
	dirao=$dira
      fi
    fi
  done

  cd $comgens
  #    echo filestring=$filestring | tr " " "\n"
  ls -ldrt $filestring | tail -10
  #ls -ldrt $filestring

  cd $comgens
  $basebin/space.global
  $basebin/llqww -a

  echo hpss.put":   \c"
  machl=`uname -n | cut -c1`
  machstring="c1n6 c2n6"
  machstring="s1n6 s2n6"
  machstring="c1n6 c2n6 s1n6 s2n6"
  machstring="${machl}1n6 ${machl}2n6"
  for mach in $machstring
  do
    echo `ssh $mach 'ps -elf | grep "hpss\.put" | grep -v grep' | grep -c $LOGNAME`"=$mach    \c"
  done
  echo `ls -1 /ptmp/$LOGNAME/crontask/new | wc -l`"=queue"

  sleep $interval
  echo
  (( time = time + interval ))
done
